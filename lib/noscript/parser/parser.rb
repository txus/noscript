#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.7
# from Racc grammer file "".
#

require 'racc/parser.rb'

#
# generated by racc
#
require_relative 'lexer'

module Noscript
  class Parser < Racc::Parser

module_eval(<<'...end noscript.y/module_eval...', 'noscript.y', 231)

include AST

...end noscript.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    31,    95,    32,     5,    16,    17,    21,    22,    23,    29,
   108,     5,     5,    31,    30,    32,     5,    16,    17,    21,
    22,    23,    29,   111,    60,    61,    93,    30,    63,     6,
    15,   114,    24,    26,   113,    94,    28,     6,     6,    59,
    56,    59,     6,    15,    88,    24,    26,   112,    31,    28,
    32,     5,    16,    17,    21,    22,    23,    29,    51,    31,
    67,    32,    30,    16,    17,    21,    22,    23,    29,    89,
    51,     5,    69,    30,    35,    87,    84,     6,    15,   126,
    24,    26,    35,    35,    28,    46,    47,    44,    45,    15,
   103,    24,    26,    63,    31,    28,    32,     6,    16,    17,
    21,    22,    23,    29,    35,    31,    96,    32,    30,    16,
    17,    21,    22,    23,    29,    33,    85,   nil,    35,    30,
    46,    47,    44,    45,    15,   nil,    24,    26,   nil,    35,
    28,    46,    47,    44,    45,    15,   nil,    24,    26,   nil,
    31,    28,    32,    55,    16,    17,    21,    22,    23,    29,
   nil,    31,   nil,    32,    30,    16,    17,    21,    22,    23,
    29,    35,   nil,    46,    47,    30,   nil,   nil,   nil,   122,
    15,     5,    24,    26,   nil,    35,    28,    46,    47,   121,
   nil,    15,   nil,    24,    26,   nil,    31,    28,    32,     5,
    16,    17,    21,    22,    23,    29,   nil,     6,   nil,    31,
    30,    32,     5,    16,    17,    21,    22,    23,    29,   nil,
   nil,   nil,   nil,    30,   nil,     6,    15,   nil,    24,    26,
   nil,    35,    28,    46,    47,    44,    45,   nil,     6,    15,
   nil,    24,    26,   nil,    31,    28,    32,    55,    16,    17,
    21,    22,    23,    29,   nil,    31,   nil,    32,    30,    16,
    17,    21,    22,    23,    29,   nil,   nil,     5,   nil,    30,
   nil,   nil,   nil,   nil,    15,   118,    24,    26,   nil,   nil,
    28,   nil,   nil,   nil,   nil,    15,   nil,    24,    26,   nil,
    31,    28,    32,     6,    16,    17,    21,    22,    23,    29,
   nil,    31,   nil,    32,    30,    16,    17,    21,    22,    23,
    29,   nil,   nil,     5,   nil,    30,   nil,   nil,   nil,   nil,
    15,   123,    24,    26,   nil,   nil,    28,   nil,   nil,   nil,
   nil,    15,   nil,    24,    26,   nil,    31,    28,    32,     6,
    16,    17,    21,    22,    23,    29,   nil,    31,   nil,    32,
    30,    16,    17,    21,    22,    23,    29,   nil,   nil,   nil,
   nil,    30,   nil,   nil,   nil,   nil,    15,   nil,    24,    26,
   nil,   nil,    28,   nil,   nil,   nil,   nil,    15,   nil,    24,
    26,   nil,    31,    28,    32,     5,    16,    17,    21,    22,
    23,    29,   nil,    31,   nil,    32,    30,    16,    17,    21,
    22,    23,    29,   nil,   nil,   nil,   nil,    30,   nil,   nil,
   nil,     6,    15,   nil,    24,    26,   nil,   nil,    28,   nil,
   nil,   nil,   nil,    15,   nil,    24,    26,   nil,    31,    28,
    32,   nil,    16,    17,    21,    22,    23,    29,   nil,    31,
   nil,    32,    30,    16,    17,    21,    22,    23,    29,   nil,
   nil,   nil,   nil,    30,   nil,   nil,   nil,   nil,    15,   nil,
    24,    26,   nil,   nil,    28,   nil,   nil,   nil,   nil,    15,
   nil,    24,    26,   nil,    31,    28,    32,   nil,    16,    17,
    21,    22,    23,    29,   nil,    31,   nil,    32,    30,    16,
    17,    21,    22,    23,    29,   nil,   nil,   nil,   nil,    30,
   nil,   nil,   nil,   nil,    15,   nil,    24,    26,   nil,   nil,
    28,   nil,   nil,   nil,   nil,    15,   nil,    24,    26,   nil,
    31,    28,    32,   nil,    16,    17,    21,    22,    23,    29,
   nil,    31,   nil,    32,    30,    16,    17,    21,    22,    23,
    29,   nil,   nil,   nil,   nil,    30,   nil,   nil,   nil,   nil,
    15,   nil,    24,    26,   nil,   nil,    28,   nil,   nil,   nil,
   nil,    15,   nil,    24,    26,   nil,    31,    28,    32,   nil,
    16,    17,    21,    22,    23,    29,   nil,    31,   nil,    32,
    30,    16,    17,    21,    22,    23,    29,   nil,   nil,   nil,
   nil,    30,   nil,   nil,   nil,   nil,    15,   nil,    24,    26,
   nil,   nil,    28,   nil,   nil,   nil,   nil,    15,   nil,    24,
    26,   nil,    31,    28,    32,   nil,    16,    17,    21,    22,
    23,    29,   nil,    31,   nil,    32,    30,    16,    17,    21,
    22,    23,    29,   nil,   nil,   nil,   nil,    30,   nil,   nil,
   nil,   nil,    15,   nil,    24,    26,   nil,   nil,    28,   nil,
   nil,   nil,   nil,    15,   nil,    24,    26,   nil,    31,    28,
    32,   nil,    16,    17,    21,    22,    23,    29,   nil,    31,
   nil,    32,    30,    16,    17,    21,    22,    23,    29,   nil,
   nil,   nil,   nil,    30,   nil,   nil,   nil,   nil,    15,   nil,
    24,    26,   nil,   nil,    28,   nil,   nil,   nil,   nil,    15,
    99,    24,    26,   nil,    31,    28,    32,     5,    16,    17,
    21,    22,    23,    29,   nil,   nil,   nil,    35,    30,    46,
    47,    44,    45,    40,    41,    42,    43,    38,    39,    37,
    36,     5,   nil,     6,    15,   nil,    24,    26,   nil,   nil,
    28,    35,   nil,    46,    47,    44,    45,    40,    41,    42,
    43,    38,    39,    37,    36,    90,   nil,     6,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    35,   nil,    46,    47,    44,
    45,    40,    41,    42,    43,    38,    39,    37,    36,    35,
   nil,    46,    47,    44,    45,    40,    41,    42,    43,    38,
    39,    37,    36,   nil,   nil,   nil,    35,    82,    46,    47,
    44,    45,    40,    41,    42,    43,    38,    39,    37,    36,
    35,   nil,    46,    47,    44,    45,    40,    41,    42,    43,
    38,    39,    37,    36,    35,   nil,    46,    47,    44,    45,
    40,    41,    42,    43,    38,    39,    37,    36,    35,   nil,
    46,    47,    44,    45,    40,    41,    42,    43,    38,    39,
    37,    36,    35,   nil,    46,    47,    44,    45,    40,    41,
    42,    43,    38,    39,    37,    36,    35,   nil,    46,    47,
    44,    45,    40,    41,    42,    43,    38,    39,    37,    36,
    35,   nil,    46,    47,    44,    45,    40,    41,    42,    43,
    38,    39,    37,    36,    35,   nil,    46,    47,    44,    45,
    40,    41,    42,    43,    38,    39,    37,    36,    35,   nil,
    46,    47,    44,    45,    40,    41,    42,    43,    38,    39,
    37,    36,    35,   nil,    46,    47,    44,    45,    40,    41,
    42,    43,    38,    39,    37,    35,   nil,    46,    47,    44,
    45,    40,    41,    42,    43,    38,    39,    35,   nil,    46,
    47,    44,    45,    40,    41,    42,    43,    35,   nil,    46,
    47,    44,    45,    40,    41,    42,    43 ]

racc_action_check = [
     0,    57,     0,     0,     0,     0,     0,     0,     0,     0,
    88,   122,     2,   124,     0,   124,   124,   124,   124,   124,
   124,   124,   124,    95,    28,    29,    57,   124,    29,     0,
     0,   100,     0,     0,   100,    57,     0,   122,     2,    27,
    26,    93,   124,   124,    52,   124,   124,    96,    55,   124,
    55,    49,    55,    55,    55,    55,    55,    55,    24,   114,
    33,   114,    55,   114,   114,   114,   114,   114,   114,    52,
    84,   125,    35,   114,    81,    52,    49,    49,    55,   125,
    55,    55,    80,    74,    55,    74,    74,    74,    74,   114,
    69,   114,   114,    69,    15,   114,    15,   125,    15,    15,
    15,    15,    15,    15,    64,   112,    59,   112,    15,   112,
   112,   112,   112,   112,   112,     1,    51,   nil,    77,   112,
    77,    77,    77,    77,    15,   nil,    15,    15,   nil,    75,
    15,    75,    75,    75,    75,   112,   nil,   112,   112,   nil,
    25,   112,    25,    25,    25,    25,    25,    25,    25,    25,
   nil,   103,   nil,   103,    25,   103,   103,   103,   103,   103,
   103,    78,   nil,    78,    78,   103,   nil,   nil,   nil,   115,
    25,   115,    25,    25,   nil,    79,    25,    79,    79,   115,
   nil,   103,   nil,   103,   103,   nil,   102,   103,   102,   102,
   102,   102,   102,   102,   102,   102,   nil,   115,   nil,   101,
   102,   101,   101,   101,   101,   101,   101,   101,   101,   nil,
   nil,   nil,   nil,   101,   nil,   102,   102,   nil,   102,   102,
   nil,    76,   102,    76,    76,    76,    76,   nil,   101,   101,
   nil,   101,   101,   nil,    89,   101,    89,    89,    89,    89,
    89,    89,    89,    89,   nil,    30,   nil,    30,    89,    30,
    30,    30,    30,    30,    30,   nil,   nil,   105,   nil,    30,
   nil,   nil,   nil,   nil,    89,   105,    89,    89,   nil,   nil,
    89,   nil,   nil,   nil,   nil,    30,   nil,    30,    30,   nil,
    31,    30,    31,   105,    31,    31,    31,    31,    31,    31,
   nil,    32,   nil,    32,    31,    32,    32,    32,    32,    32,
    32,   nil,   nil,   116,   nil,    32,   nil,   nil,   nil,   nil,
    31,   116,    31,    31,   nil,   nil,    31,   nil,   nil,   nil,
   nil,    32,   nil,    32,    32,   nil,    85,    32,    85,   116,
    85,    85,    85,    85,    85,    85,   nil,    34,   nil,    34,
    85,    34,    34,    34,    34,    34,    34,   nil,   nil,   nil,
   nil,    34,   nil,   nil,   nil,   nil,    85,   nil,    85,    85,
   nil,   nil,    85,   nil,   nil,   nil,   nil,    34,   nil,    34,
    34,   nil,    83,    34,    83,    83,    83,    83,    83,    83,
    83,    83,   nil,    61,   nil,    61,    83,    61,    61,    61,
    61,    61,    61,   nil,   nil,   nil,   nil,    61,   nil,   nil,
   nil,    83,    83,   nil,    83,    83,   nil,   nil,    83,   nil,
   nil,   nil,   nil,    61,   nil,    61,    61,   nil,    37,    61,
    37,   nil,    37,    37,    37,    37,    37,    37,   nil,    38,
   nil,    38,    37,    38,    38,    38,    38,    38,    38,   nil,
   nil,   nil,   nil,    38,   nil,   nil,   nil,   nil,    37,   nil,
    37,    37,   nil,   nil,    37,   nil,   nil,   nil,   nil,    38,
   nil,    38,    38,   nil,    39,    38,    39,   nil,    39,    39,
    39,    39,    39,    39,   nil,    40,   nil,    40,    39,    40,
    40,    40,    40,    40,    40,   nil,   nil,   nil,   nil,    40,
   nil,   nil,   nil,   nil,    39,   nil,    39,    39,   nil,   nil,
    39,   nil,   nil,   nil,   nil,    40,   nil,    40,    40,   nil,
    41,    40,    41,   nil,    41,    41,    41,    41,    41,    41,
   nil,    42,   nil,    42,    41,    42,    42,    42,    42,    42,
    42,   nil,   nil,   nil,   nil,    42,   nil,   nil,   nil,   nil,
    41,   nil,    41,    41,   nil,   nil,    41,   nil,   nil,   nil,
   nil,    42,   nil,    42,    42,   nil,    43,    42,    43,   nil,
    43,    43,    43,    43,    43,    43,   nil,    44,   nil,    44,
    43,    44,    44,    44,    44,    44,    44,   nil,   nil,   nil,
   nil,    44,   nil,   nil,   nil,   nil,    43,   nil,    43,    43,
   nil,   nil,    43,   nil,   nil,   nil,   nil,    44,   nil,    44,
    44,   nil,    45,    44,    45,   nil,    45,    45,    45,    45,
    45,    45,   nil,    46,   nil,    46,    45,    46,    46,    46,
    46,    46,    46,   nil,   nil,   nil,   nil,    46,   nil,   nil,
   nil,   nil,    45,   nil,    45,    45,   nil,   nil,    45,   nil,
   nil,   nil,   nil,    46,   nil,    46,    46,   nil,    47,    46,
    47,   nil,    47,    47,    47,    47,    47,    47,   nil,    63,
   nil,    63,    47,    63,    63,    63,    63,    63,    63,   nil,
   nil,   nil,   nil,    63,   nil,   nil,   nil,   nil,    47,   nil,
    47,    47,   nil,   nil,    47,   nil,   nil,   nil,   nil,    63,
    63,    63,    63,   nil,    36,    63,    36,    66,    36,    36,
    36,    36,    36,    36,   nil,   nil,   nil,    66,    36,    66,
    66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
    66,    65,   nil,    66,    36,   nil,    36,    36,   nil,   nil,
    36,    65,   nil,    65,    65,    65,    65,    65,    65,    65,
    65,    65,    65,    65,    65,    54,   nil,    65,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    54,   nil,    54,    54,    54,
    54,    54,    54,    54,    54,    54,    54,    54,    54,    48,
   nil,    48,    48,    48,    48,    48,    48,    48,    48,    48,
    48,    48,    48,   nil,   nil,   nil,    98,    48,    98,    98,
    98,    98,    98,    98,    98,    98,    98,    98,    98,    98,
    91,   nil,    91,    91,    91,    91,    91,    91,    91,    91,
    91,    91,    91,    91,   107,   nil,   107,   107,   107,   107,
   107,   107,   107,   107,   107,   107,   107,   107,     3,   nil,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,    68,   nil,    68,    68,    68,    68,    68,    68,
    68,    68,    68,    68,    68,    68,   120,   nil,   120,   120,
   120,   120,   120,   120,   120,   120,   120,   120,   120,   120,
   119,   nil,   119,   119,   119,   119,   119,   119,   119,   119,
   119,   119,   119,   119,   117,   nil,   117,   117,   117,   117,
   117,   117,   117,   117,   117,   117,   117,   117,    97,   nil,
    97,    97,    97,    97,    97,    97,    97,    97,    97,    97,
    97,    97,    70,   nil,    70,    70,    70,    70,    70,    70,
    70,    70,    70,    70,    70,    71,   nil,    71,    71,    71,
    71,    71,    71,    71,    71,    71,    71,    73,   nil,    73,
    73,    73,    73,    73,    73,    73,    73,    72,   nil,    72,
    72,    72,    72,    72,    72,    72,    72 ]

racc_action_pointer = [
    -2,   115,     7,   813,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    92,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    47,   138,    35,    34,    19,    -4,
   243,   278,   289,    60,   335,    61,   692,   416,   427,   462,
   473,   508,   519,   554,   565,   600,   611,   646,   754,    46,
   nil,    87,    39,   nil,   740,    46,   nil,    -4,   nil,    95,
   nil,   381,   nil,   657,    89,   716,   692,   nil,   827,    61,
   897,   910,   932,   922,    68,   114,   206,   103,   146,   160,
    67,    59,   nil,   370,    59,   324,   nil,   nil,   -26,   232,
   nil,   785,   nil,    36,   nil,   -16,    10,   883,   771,   nil,
     1,   197,   184,   149,   nil,   252,   nil,   799,   nil,   nil,
   nil,   nil,   103,   nil,    57,   166,   298,   869,   nil,   855,
   841,   nil,     6,   nil,    11,    66,   nil ]

racc_action_default = [
    -1,   -78,    -2,    -3,    -6,    -7,    -8,    -9,   -10,   -11,
   -12,   -13,   -14,   -15,   -16,   -78,   -18,   -19,   -20,   -21,
   -22,   -23,   -24,   -25,   -70,   -32,   -28,   -39,   -43,   -49,
   -78,   -78,   -78,   -78,    -5,   -78,   -78,   -78,   -78,   -78,
   -78,   -78,   -78,   -78,   -78,   -78,   -78,   -78,   -78,   -78,
   -71,   -74,   -78,   -33,   -35,   -78,   -29,   -78,   -40,   -78,
   -44,   -78,   -51,   -78,   -69,   -78,   -78,   127,    -4,   -50,
   -57,   -58,   -59,   -60,   -61,   -62,   -63,   -64,   -65,   -66,
   -67,   -68,   -17,   -78,   -78,   -78,   -27,   -30,   -78,   -78,
   -37,   -36,   -38,   -78,   -45,   -78,   -78,   -47,   -55,   -53,
   -78,   -78,   -78,   -78,   -52,   -78,   -72,   -73,   -31,   -34,
   -41,   -46,   -78,   -54,   -78,   -78,   -78,   -48,   -26,   -42,
   -56,   -75,   -78,   -77,   -78,   -78,   -76 ]

racc_goto_table = [
     2,    58,    34,    50,    53,    62,    49,    48,    57,    92,
    52,    86,   100,     1,   nil,   nil,   nil,    54,   nil,   nil,
   nil,   nil,    64,    65,    66,   nil,    68,   nil,    70,    71,
    72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
   nil,   nil,   nil,   nil,   nil,   104,   nil,    91,   nil,    83,
   nil,   nil,   nil,    97,   nil,    98,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   106,   nil,   101,   102,   110,   109,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   107,   nil,   nil,
   nil,    54,   nil,   105,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   117,   nil,   nil,   nil,   nil,
   nil,   115,   116,   nil,   119,    34,   120,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    34,    34,   nil,   nil,   nil,
   nil,   nil,   124,   nil,   125,    34 ]

racc_goto_check = [
     2,    24,     4,    27,    20,    25,    16,     3,    22,    23,
    18,    19,    26,     1,   nil,   nil,   nil,     3,   nil,   nil,
   nil,   nil,     3,     3,     3,   nil,     3,   nil,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
   nil,   nil,   nil,   nil,   nil,    25,   nil,     3,   nil,     4,
   nil,   nil,   nil,     3,   nil,     3,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    27,   nil,     4,     4,    24,    20,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,   nil,
   nil,     3,   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,   nil,
   nil,     2,     2,   nil,     3,     4,     3,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     4,     4,   nil,   nil,   nil,
   nil,   nil,     4,   nil,     2,     4 ]

racc_goto_pointer = [
   nil,    13,     0,    -8,     0,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   -18,   nil,   -15,   -41,
   -21,   nil,   -19,   -48,   -26,   -24,   -51,   -21 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     7,     8,     9,    10,    11,
    12,    13,    14,    18,    19,    20,   nil,    25,   nil,   nil,
   nil,    27,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 41, :_reduce_1,
  1, 41, :_reduce_2,
  1, 42, :_reduce_3,
  3, 42, :_reduce_4,
  2, 42, :_reduce_5,
  1, 42, :_reduce_6,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  3, 43, :_reduce_17,
  1, 45, :_reduce_18,
  1, 45, :_reduce_19,
  1, 45, :_reduce_20,
  1, 45, :_reduce_21,
  1, 45, :_reduce_22,
  1, 45, :_reduce_23,
  1, 45, :_reduce_24,
  1, 45, :_reduce_25,
  5, 53, :_reduce_26,
  3, 54, :_reduce_27,
  1, 57, :_reduce_none,
  2, 57, :_reduce_none,
  1, 59, :_reduce_none,
  2, 59, :_reduce_none,
  0, 58, :_reduce_32,
  1, 58, :_reduce_33,
  3, 58, :_reduce_34,
  1, 60, :_reduce_35,
  2, 60, :_reduce_36,
  2, 60, :_reduce_37,
  3, 55, :_reduce_38,
  0, 62, :_reduce_39,
  1, 62, :_reduce_40,
  3, 62, :_reduce_41,
  4, 64, :_reduce_42,
  1, 61, :_reduce_none,
  2, 61, :_reduce_none,
  1, 63, :_reduce_none,
  2, 63, :_reduce_none,
  3, 49, :_reduce_47,
  5, 50, :_reduce_48,
  1, 47, :_reduce_49,
  3, 47, :_reduce_50,
  2, 46, :_reduce_51,
  4, 46, :_reduce_52,
  2, 65, :_reduce_53,
  3, 65, :_reduce_54,
  1, 66, :_reduce_55,
  3, 66, :_reduce_56,
  3, 48, :_reduce_57,
  3, 48, :_reduce_58,
  3, 48, :_reduce_59,
  3, 48, :_reduce_60,
  3, 48, :_reduce_61,
  3, 48, :_reduce_62,
  3, 48, :_reduce_63,
  3, 48, :_reduce_64,
  3, 48, :_reduce_65,
  3, 48, :_reduce_66,
  3, 48, :_reduce_67,
  3, 48, :_reduce_68,
  2, 48, :_reduce_69,
  0, 56, :_reduce_70,
  1, 56, :_reduce_71,
  3, 56, :_reduce_72,
  3, 67, :_reduce_73,
  1, 67, :_reduce_74,
  5, 51, :_reduce_75,
  8, 51, :_reduce_76,
  5, 52, :_reduce_77 ]

racc_reduce_n = 78

racc_shift_n = 127

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :WHILE => 4,
  :NEWLINE => 5,
  :INTEGER => 6,
  :STRING => 7,
  :TRUE => 8,
  :FALSE => 9,
  :NIL => 10,
  :IDENTIFIER => 11,
  :DEREF => 12,
  :END => 13,
  :UMINUS => 14,
  "." => 15,
  "!" => 16,
  "*" => 17,
  "/" => 18,
  "+" => 19,
  "-" => 20,
  ">" => 21,
  ">=" => 22,
  "<" => 23,
  "<=" => 24,
  "==" => 25,
  "!=" => 26,
  "&&" => 27,
  "||" => 28,
  "=" => 29,
  "," => 30,
  ";" => 31,
  "(" => 32,
  ")" => 33,
  "->" => 34,
  "[" => 35,
  "]" => 36,
  ":" => 37,
  "{" => 38,
  "}" => 39 }

racc_nt_base = 40

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "WHILE",
  "NEWLINE",
  "INTEGER",
  "STRING",
  "TRUE",
  "FALSE",
  "NIL",
  "IDENTIFIER",
  "DEREF",
  "END",
  "UMINUS",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"==\"",
  "\"!=\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\",\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "\"->\"",
  "\"[\"",
  "\"]\"",
  "\":\"",
  "\"{\"",
  "\"}\"",
  "$start",
  "Root",
  "Expressions",
  "Expression",
  "Terminator",
  "Literal",
  "Call",
  "SlotGet",
  "Operator",
  "LocalAssign",
  "SlotAssign",
  "If",
  "While",
  "Function",
  "Array",
  "Tuple",
  "ParamList",
  "LBracket",
  "ArrayList",
  "RBracket",
  "ArrayListElement",
  "LBrace",
  "TupleList",
  "RBrace",
  "TupleListElement",
  "ArgListWithParens",
  "ArgList",
  "Parameter" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'noscript.y', 33)
  def _reduce_1(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 34)
  def _reduce_2(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 39)
  def _reduce_3(val, _values, result)
     result = Nodes.new(val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 40)
  def _reduce_4(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 42)
  def _reduce_5(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 43)
  def _reduce_6(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'noscript.y', 62)
  def _reduce_17(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 67)
  def _reduce_18(val, _values, result)
     result = IntegerNode.new(val[0]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 68)
  def _reduce_19(val, _values, result)
     result = StringNode.new(val[0]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 69)
  def _reduce_20(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 70)
  def _reduce_21(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 71)
  def _reduce_22(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 72)
  def _reduce_23(val, _values, result)
     result = TrueNode.new; result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 73)
  def _reduce_24(val, _values, result)
     result = FalseNode.new; result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 74)
  def _reduce_25(val, _values, result)
     result = NilNode.new; result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 85)
  def _reduce_26(val, _values, result)
     result = FunctionNode.new(val[1], val[3]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 89)
  def _reduce_27(val, _values, result)
     result = ArrayNode.new(val[1]); result.pos(filename, lineno)
    result
  end
.,.,

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

module_eval(<<'.,.,', 'noscript.y', 103)
  def _reduce_32(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 104)
  def _reduce_33(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 105)
  def _reduce_34(val, _values, result)
     result = val[0] += [val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 109)
  def _reduce_35(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 110)
  def _reduce_36(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 111)
  def _reduce_37(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 115)
  def _reduce_38(val, _values, result)
     result = TupleNode.new(val[1]); result.pos(filename, lineno)
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 119)
  def _reduce_39(val, _values, result)
     result = {} 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 120)
  def _reduce_40(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 121)
  def _reduce_41(val, _values, result)
     result = val[0].merge!(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 125)
  def _reduce_42(val, _values, result)
     result = { val[1] => val[3] } 
    result
  end
.,.,

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

module_eval(<<'.,.,', 'noscript.y', 140)
  def _reduce_47(val, _values, result)
     result = LocalAssignNode.new(val[0], val[2]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 145)
  def _reduce_48(val, _values, result)
     result = SlotAssignNode.new(val[0], val[2], val[4]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 151)
  def _reduce_49(val, _values, result)
     result = SlotGetNode.new(nil, val[0]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 153)
  def _reduce_50(val, _values, result)
     result = SlotGetNode.new(val[0], val[2]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 159)
  def _reduce_51(val, _values, result)
     result = CallNode.new(nil, val[0], val[1]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 162)
  def _reduce_52(val, _values, result)
     result = CallNode.new(val[0], val[2], val[3]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 166)
  def _reduce_53(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 167)
  def _reduce_54(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 171)
  def _reduce_55(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 172)
  def _reduce_56(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 177)
  def _reduce_57(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 178)
  def _reduce_58(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 179)
  def _reduce_59(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 180)
  def _reduce_60(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 181)
  def _reduce_61(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 182)
  def _reduce_62(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 183)
  def _reduce_63(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 184)
  def _reduce_64(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 187)
  def _reduce_65(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno)
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 188)
  def _reduce_66(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno)
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 189)
  def _reduce_67(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno)
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 190)
  def _reduce_68(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno)
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 192)
  def _reduce_69(val, _values, result)
     result = CallNode.new(val[1], val[0], []); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 196)
  def _reduce_70(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 197)
  def _reduce_71(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 198)
  def _reduce_72(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 202)
  def _reduce_73(val, _values, result)
     result = ParameterNode.new(val[0], val[2]); result.pos(filename, lineno)
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 203)
  def _reduce_74(val, _values, result)
     result = ParameterNode.new(val[0]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 209)
  def _reduce_75(val, _values, result)
     result = IfNode.new(val[1], val[3], nil); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 214)
  def _reduce_76(val, _values, result)
     result = IfNode.new(val[1], val[3], val[6]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 220)
  def _reduce_77(val, _values, result)
     result = WhileNode.new(val[1], val[3]); result.pos(filename, lineno) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Noscript


