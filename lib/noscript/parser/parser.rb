#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.7
# from Racc grammer file "".
#

require 'racc/parser.rb'

#
# generated by racc
#
require_relative 'lexer'

module Noscript
  class Parser < Racc::Parser

module_eval(<<'...end noscript.y/module_eval...', 'noscript.y', 234)

include AST

def parse(code)
  scan_str(code.strip)
end

...end noscript.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    -1,    36,    32,   100,    33,     5,    17,    18,    22,    23,
    24,    30,    30,     5,    -5,    31,    32,    -5,    33,    -5,
    17,    18,    22,    23,    24,    30,    -5,    98,     5,    31,
     6,    16,   101,    25,    27,   126,    99,    29,     6,   108,
   105,   111,   107,    51,    -5,    16,    93,    25,    27,     5,
    32,    29,    33,     6,    17,    18,    22,    23,    24,    30,
    32,    36,    33,    31,    17,    18,    22,    23,    24,    30,
    94,    64,    49,    31,     6,    51,    92,    30,   122,    16,
     5,    25,    27,    30,    30,    29,    34,   121,    65,    16,
     5,    25,    27,    59,    32,    29,    33,   120,    17,    18,
    22,    23,    24,    30,    32,     6,    33,    31,    17,    18,
    22,    23,    24,    30,    64,     6,    36,    31,    47,    48,
    30,    30,   114,    16,     5,    25,    27,    36,    69,    29,
   nil,   123,   nil,    16,     5,    25,    27,   nil,    32,    29,
    33,   nil,    17,    18,    22,    23,    24,    30,    32,     6,
    33,    31,    17,    18,    22,    23,    24,    30,    90,     6,
    36,    31,    47,    48,    45,    46,   nil,    16,   nil,    25,
    27,   nil,    36,    29,    47,    48,   nil,    16,   nil,    25,
    27,   nil,    32,    29,    33,   nil,    17,    18,    22,    23,
    24,    30,    32,   nil,    33,    31,    17,    18,    22,    23,
    24,    30,   nil,   nil,    36,    31,    47,    48,    45,    46,
   nil,    16,    86,    25,    27,   nil,   nil,    29,   nil,   nil,
   nil,    16,   nil,    25,    27,   nil,    32,    29,    33,   nil,
    17,    18,    22,    23,    24,    30,    32,   nil,    33,    31,
    17,    18,    22,    23,    24,    30,   nil,   nil,    36,    31,
    47,    48,    45,    46,   nil,    16,   nil,    25,    27,   nil,
   nil,    29,   nil,   nil,   nil,    16,   nil,    25,    27,   nil,
    32,    29,    33,   nil,    17,    18,    22,    23,    24,    30,
    32,   nil,    33,    31,    17,    18,    22,    23,    24,    30,
   nil,   nil,    36,    31,    47,    48,    45,    46,   nil,    16,
   nil,    25,    27,   nil,   nil,    29,   nil,   nil,   nil,    16,
   nil,    25,    27,   nil,    32,    29,    33,   nil,    17,    18,
    22,    23,    24,    30,    32,   nil,    33,    31,    17,    18,
    22,    23,    24,    30,   nil,   nil,   nil,    31,   nil,   nil,
   nil,   nil,   nil,    16,   nil,    25,    27,   nil,   nil,    29,
   nil,   nil,   nil,    16,   nil,    25,    27,   nil,    32,    29,
    33,   nil,    17,    18,    22,    23,    24,    30,   nil,   nil,
    32,    31,    33,     5,    17,    18,    22,    23,    24,    30,
   nil,   nil,   nil,    31,   nil,   nil,   nil,    16,   nil,    25,
    27,   nil,   nil,    29,   nil,   nil,   nil,   nil,     6,    16,
   nil,    25,    27,   nil,    32,    29,    33,    58,    17,    18,
    22,    23,    24,    30,   nil,   nil,    32,    31,    33,     5,
    17,    18,    22,    23,    24,    30,   nil,   nil,   nil,    31,
   nil,   -33,   nil,    16,   nil,    25,    27,   -33,   nil,    29,
   nil,   nil,   nil,   nil,     6,    16,   nil,    25,    27,   nil,
    32,    29,    33,   nil,    17,    18,    22,    23,    24,    30,
   nil,   nil,    32,    31,    33,    58,    17,    18,    22,    23,
    24,    30,   nil,   nil,   nil,    31,   nil,   nil,   nil,    16,
   nil,    25,    27,   nil,   nil,    29,   nil,   nil,   nil,   nil,
   nil,    16,   nil,    25,    27,   nil,    32,    29,    33,   nil,
    17,    18,    22,    23,    24,    30,    32,   nil,    33,    31,
    17,    18,    22,    23,    24,    30,   nil,   nil,   nil,    31,
   nil,   nil,   nil,   nil,   nil,    16,   nil,    25,    27,   nil,
   nil,    29,   nil,   nil,   nil,    16,   nil,    25,    27,   nil,
    32,    29,    33,   nil,    17,    18,    22,    23,    24,    30,
   nil,   nil,    32,    31,    33,     5,    17,    18,    22,    23,
    24,    30,   nil,   nil,   nil,    31,   nil,   nil,   nil,    16,
   nil,    25,    27,   nil,   nil,    29,   nil,   nil,   nil,   nil,
     6,    16,   nil,    25,    27,   nil,    32,    29,    33,   nil,
    17,    18,    22,    23,    24,    30,   nil,   nil,    32,    31,
    33,     5,    17,    18,    22,    23,    24,    30,   nil,   nil,
   nil,    31,   nil,   nil,   nil,    16,   nil,    25,    27,   nil,
   nil,    29,   nil,   nil,   nil,   nil,     6,    16,   nil,    25,
    27,   nil,    32,    29,    33,   nil,    17,    18,    22,    23,
    24,    30,    32,   nil,    33,    31,    17,    18,    22,    23,
    24,    30,   nil,   nil,   nil,    31,   nil,   nil,   nil,   nil,
   nil,    16,   nil,    25,    27,   nil,   nil,    29,   nil,     5,
   nil,    16,   nil,    25,    27,   nil,   nil,    29,    36,   nil,
    47,    48,    45,    46,    41,    42,    43,    44,    39,    40,
    38,    37,     5,   nil,     6,   nil,   nil,   nil,   nil,   nil,
   nil,    36,   nil,    47,    48,    45,    46,    41,    42,    43,
    44,    39,    40,    38,    37,    95,   nil,     6,   nil,   nil,
   nil,   nil,   nil,   nil,    36,   nil,    47,    48,    45,    46,
    41,    42,    43,    44,    39,    40,    38,    37,    36,   nil,
    47,    48,    45,    46,    41,    42,    43,    44,    39,    40,
    38,    37,   nil,   nil,   nil,    36,    88,    47,    48,    45,
    46,    41,    42,    43,    44,    39,    40,    38,    37,    36,
   nil,    47,    48,    45,    46,    41,    42,    43,    44,    39,
    40,    38,    37,    36,   nil,    47,    48,    45,    46,    41,
    42,    43,    44,    39,    40,    38,    37,    36,   nil,    47,
    48,    45,    46,    41,    42,    43,    44,    39,    40,    38,
    37,    36,   nil,    47,    48,    45,    46,    41,    42,    43,
    44,    39,    40,    38,    37,    36,   nil,    47,    48,    45,
    46,    41,    42,    43,    44,    39,    40,    38,    37,    36,
   nil,    47,    48,    45,    46,    41,    42,    43,    44,    39,
    40,    38,    37,    36,   nil,    47,    48,    45,    46,    41,
    42,    43,    44,    39,    40,    38,    37,    36,   nil,    47,
    48,    45,    46,    41,    42,    43,    44,    39,    40,    38,
    36,   nil,    47,    48,    45,    46,    41,    42,    43,    44,
    39,    40,    36,   nil,    47,    48,    45,    46,    41,    42,
    43,    44,    36,   nil,    47,    48,    45,    46,    41,    42,
    43,    44 ]

racc_action_check = [
     0,    66,     0,    60,     0,     0,     0,     0,     0,     0,
     0,     0,    90,     2,    35,     0,    35,    35,    35,    35,
    35,    35,    35,    35,    35,    35,    35,    60,   125,    35,
     0,     0,    62,     0,     0,   125,    60,     0,     2,    87,
    71,    93,    87,    71,    35,    35,    55,    35,    35,   122,
    46,    35,    46,   125,    46,    46,    46,    46,    46,    46,
    47,    83,    47,    46,    47,    47,    47,    47,    47,    47,
    55,    98,    15,    47,   122,    15,    55,    98,   116,    46,
   116,    46,    46,    36,    25,    46,     1,   116,    29,    47,
   109,    47,    47,    27,    48,    47,    48,   109,    48,    48,
    48,    48,    48,    48,    31,   116,    31,    48,    31,    31,
    31,    31,    31,    31,    28,   109,    81,    31,    81,    81,
    28,    64,   100,    48,   117,    48,    48,    82,    34,    48,
   nil,   117,   nil,    31,    53,    31,    31,   nil,    49,    31,
    49,   nil,    49,    49,    49,    49,    49,    49,    33,   117,
    33,    49,    33,    33,    33,    33,    33,    33,    53,    53,
    79,    33,    79,    79,    79,    79,   nil,    49,   nil,    49,
    49,   nil,    80,    49,    80,    80,   nil,    33,   nil,    33,
    33,   nil,    51,    33,    51,   nil,    51,    51,    51,    51,
    51,    51,    37,   nil,    37,    51,    37,    37,    37,    37,
    37,    37,   nil,   nil,    76,    37,    76,    76,    76,    76,
   nil,    51,    51,    51,    51,   nil,   nil,    51,   nil,   nil,
   nil,    37,   nil,    37,    37,   nil,    39,    37,    39,   nil,
    39,    39,    39,    39,    39,    39,   108,   nil,   108,    39,
   108,   108,   108,   108,   108,   108,   nil,   nil,    77,   108,
    77,    77,    77,    77,   nil,    39,   nil,    39,    39,   nil,
   nil,    39,   nil,   nil,   nil,   108,   nil,   108,   108,   nil,
    58,   108,    58,   nil,    58,    58,    58,    58,    58,    58,
    41,   nil,    41,    58,    41,    41,    41,    41,    41,    41,
   nil,   nil,    78,    41,    78,    78,    78,    78,   nil,    58,
   nil,    58,    58,   nil,   nil,    58,   nil,   nil,   nil,    41,
   nil,    41,    41,   nil,    42,    41,    42,   nil,    42,    42,
    42,    42,    42,    42,    43,   nil,    43,    42,    43,    43,
    43,    43,    43,    43,   nil,   nil,   nil,    43,   nil,   nil,
   nil,   nil,   nil,    42,   nil,    42,    42,   nil,   nil,    42,
   nil,   nil,   nil,    43,   nil,    43,    43,   nil,    44,    43,
    44,   nil,    44,    44,    44,    44,    44,    44,   nil,   nil,
   124,    44,   124,   124,   124,   124,   124,   124,   124,   124,
   nil,   nil,   nil,   124,   nil,   nil,   nil,    44,   nil,    44,
    44,   nil,   nil,    44,   nil,   nil,   nil,   nil,   124,   124,
   nil,   124,   124,   nil,    26,   124,    26,    26,    26,    26,
    26,    26,    26,    26,   nil,   nil,    89,    26,    89,    89,
    89,    89,    89,    89,    89,    89,   nil,   nil,   nil,    89,
   nil,    26,   nil,    26,   nil,    26,    26,    26,   nil,    26,
   nil,   nil,   nil,   nil,    89,    89,   nil,    89,    89,   nil,
    16,    89,    16,   nil,    16,    16,    16,    16,    16,    16,
   nil,   nil,    94,    16,    94,    94,    94,    94,    94,    94,
    94,    94,   nil,   nil,   nil,    94,   nil,   nil,   nil,    16,
   nil,    16,    16,   nil,   nil,    16,   nil,   nil,   nil,   nil,
   nil,    94,   nil,    94,    94,   nil,    40,    94,    40,   nil,
    40,    40,    40,    40,    40,    40,   101,   nil,   101,    40,
   101,   101,   101,   101,   101,   101,   nil,   nil,   nil,   101,
   nil,   nil,   nil,   nil,   nil,    40,   nil,    40,    40,   nil,
   nil,    40,   nil,   nil,   nil,   101,   nil,   101,   101,   nil,
    45,   101,    45,   nil,    45,    45,    45,    45,    45,    45,
   nil,   nil,   103,    45,   103,   103,   103,   103,   103,   103,
   103,   103,   nil,   nil,   nil,   103,   nil,   nil,   nil,    45,
   nil,    45,    45,   nil,   nil,    45,   nil,   nil,   nil,   nil,
   103,   103,   nil,   103,   103,   nil,    38,   103,    38,   nil,
    38,    38,    38,    38,    38,    38,   nil,   nil,   104,    38,
   104,   104,   104,   104,   104,   104,   104,   104,   nil,   nil,
   nil,   104,   nil,   nil,   nil,    38,   nil,    38,    38,   nil,
   nil,    38,   nil,   nil,   nil,   nil,   104,   104,   nil,   104,
   104,   nil,    32,   104,    32,   nil,    32,    32,    32,    32,
    32,    32,   105,   nil,   105,    32,   105,   105,   105,   105,
   105,   105,   nil,   nil,   nil,   105,   nil,   nil,   nil,   nil,
   nil,    32,   nil,    32,    32,   nil,   nil,    32,   nil,    67,
   nil,   105,   nil,   105,   105,   nil,   nil,   105,    67,   nil,
    67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
    67,    67,    68,   nil,    67,   nil,   nil,   nil,   nil,   nil,
   nil,    68,   nil,    68,    68,    68,    68,    68,    68,    68,
    68,    68,    68,    68,    68,    57,   nil,    68,   nil,   nil,
   nil,   nil,   nil,   nil,    57,   nil,    57,    57,    57,    57,
    57,    57,    57,    57,    57,    57,    57,    57,    52,   nil,
    52,    52,    52,    52,    52,    52,    52,    52,    52,    52,
    52,    52,   nil,   nil,   nil,    96,    52,    96,    96,    96,
    96,    96,    96,    96,    96,    96,    96,    96,    96,     3,
   nil,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,    84,   nil,    84,    84,    84,    84,    84,
    84,    84,    84,    84,    84,    84,    84,   115,   nil,   115,
   115,   115,   115,   115,   115,   115,   115,   115,   115,   115,
   115,    70,   nil,    70,    70,    70,    70,    70,    70,    70,
    70,    70,    70,    70,    70,   118,   nil,   118,   118,   118,
   118,   118,   118,   118,   118,   118,   118,   118,   118,    85,
   nil,    85,    85,    85,    85,    85,    85,    85,    85,    85,
    85,    85,    85,   119,   nil,   119,   119,   119,   119,   119,
   119,   119,   119,   119,   119,   119,   119,    72,   nil,    72,
    72,    72,    72,    72,    72,    72,    72,    72,    72,    72,
    73,   nil,    73,    73,    73,    73,    73,    73,    73,    73,
    73,    73,    74,   nil,    74,    74,    74,    74,    74,    74,
    74,    74,    75,   nil,    75,    75,    75,    75,    75,    75,
    75,    75 ]

racc_action_pointer = [
     0,    86,     8,   755,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    44,   448,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    73,   402,    88,   109,    83,
   nil,   102,   630,   146,   128,    14,    72,   190,   584,   224,
   494,   278,   312,   322,   356,   538,    48,    58,    92,   136,
   nil,   180,   724,   129,   nil,    41,   nil,   710,   268,   nil,
    -2,   nil,    -4,   nil,   110,   nil,   -13,   664,   687,   nil,
   797,    12,   853,   866,   878,   888,   190,   234,   278,   146,
   158,   102,   113,    47,   769,   825,   nil,    10,   nil,   414,
     1,   nil,   nil,     6,   460,   nil,   741,   nil,    66,   nil,
    84,   504,   nil,   550,   596,   640,   nil,   nil,   234,    85,
   nil,   nil,   nil,   nil,   nil,   783,    75,   119,   811,   839,
   nil,   nil,    44,   nil,   368,    23,   nil ]

racc_action_default = [
   -53,   -80,    -2,    -3,    -6,    -7,    -8,    -9,   -10,   -11,
   -12,   -13,   -14,   -15,   -16,   -17,   -53,   -19,   -20,   -21,
   -22,   -23,   -24,   -25,   -26,   -74,   -53,   -29,   -40,   -46,
   -50,   -53,   -53,   -53,   -80,   -53,   -80,   -53,   -53,   -53,
   -53,   -53,   -53,   -53,   -53,   -53,   -53,   -53,   -53,   -53,
   -55,   -53,   -80,   -80,   -75,   -80,   -34,   -36,   -53,   -30,
   -80,   -41,   -80,   -44,   -80,   -47,   -73,   -80,   -80,   127,
    -4,   -54,   -61,   -62,   -63,   -64,   -65,   -66,   -67,   -68,
   -69,   -70,   -71,   -72,   -51,   -59,   -57,   -80,   -18,   -53,
   -80,   -28,   -31,   -80,   -53,   -38,   -37,   -39,   -80,   -48,
   -80,   -53,   -45,   -53,   -53,   -53,   -56,   -58,   -53,   -80,
   -76,   -32,   -35,   -42,   -49,   -43,   -80,   -80,   -52,   -60,
   -27,   -77,   -80,   -79,   -53,   -80,   -78 ]

racc_goto_table = [
     2,    52,    35,    61,    56,    50,    55,    97,    53,     1,
    54,    57,    87,    63,    91,    60,    66,    67,    68,   nil,
    70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
    80,    81,    82,    83,    84,   nil,    85,   nil,   nil,   nil,
   nil,   nil,   nil,    96,   nil,   nil,   nil,   nil,   nil,   102,
   nil,   nil,   nil,    89,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   106,   nil,   nil,   nil,   nil,   nil,   103,   104,   nil,
   nil,   nil,   112,   113,   nil,   110,   nil,   nil,   nil,    57,
   nil,   nil,   nil,    63,   nil,   nil,   115,   nil,   nil,   109,
   118,   nil,   nil,   119,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   116,   117,   nil,   nil,   nil,   nil,    35,
   nil,   nil,   nil,   nil,   nil,   nil,    35,    35,   nil,   nil,
   nil,   nil,   124,   nil,   125,    35 ]

racc_goto_check = [
     2,     3,     4,    25,    21,    27,    19,    24,    17,     1,
    13,     3,    28,    13,    20,    23,     3,     3,     3,   nil,
     3,    13,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,   nil,     3,   nil,   nil,   nil,
   nil,   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,    13,
   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    27,   nil,   nil,   nil,   nil,   nil,     4,     4,   nil,
   nil,   nil,    21,    25,   nil,    13,   nil,   nil,   nil,     3,
   nil,   nil,   nil,    13,   nil,   nil,     3,   nil,   nil,     2,
     3,   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     2,     2,   nil,   nil,   nil,   nil,     4,
   nil,   nil,   nil,   nil,   nil,   nil,     4,     4,   nil,   nil,
   nil,   nil,     4,   nil,     2,     4 ]

racc_goto_pointer = [
   nil,     9,     0,   -15,     0,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   -15,   nil,   nil,   nil,   -17,   nil,   -20,
   -41,   -22,   nil,   -13,   -53,   -25,   nil,   -10,   -39 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     7,     8,     9,    10,    11,
    12,    13,    14,    15,    19,    20,    21,   nil,    26,   nil,
   nil,   nil,    28,   nil,   nil,   nil,    62,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 40, :_reduce_1,
  1, 40, :_reduce_2,
  1, 41, :_reduce_3,
  3, 41, :_reduce_4,
  2, 41, :_reduce_5,
  1, 41, :_reduce_6,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  3, 42, :_reduce_18,
  1, 44, :_reduce_19,
  1, 44, :_reduce_20,
  1, 44, :_reduce_21,
  1, 44, :_reduce_22,
  1, 44, :_reduce_23,
  1, 44, :_reduce_24,
  1, 44, :_reduce_25,
  1, 44, :_reduce_26,
  5, 53, :_reduce_27,
  3, 54, :_reduce_28,
  1, 57, :_reduce_none,
  2, 57, :_reduce_none,
  1, 59, :_reduce_none,
  2, 59, :_reduce_none,
  0, 58, :_reduce_33,
  1, 58, :_reduce_34,
  3, 58, :_reduce_35,
  1, 60, :_reduce_36,
  2, 60, :_reduce_37,
  2, 60, :_reduce_38,
  3, 55, :_reduce_39,
  0, 62, :_reduce_40,
  1, 62, :_reduce_41,
  3, 62, :_reduce_42,
  3, 64, :_reduce_43,
  1, 65, :_reduce_none,
  2, 65, :_reduce_45,
  1, 61, :_reduce_none,
  2, 61, :_reduce_none,
  1, 63, :_reduce_none,
  2, 63, :_reduce_none,
  1, 52, :_reduce_50,
  3, 48, :_reduce_51,
  5, 46, :_reduce_52,
  0, 51, :_reduce_none,
  3, 51, :_reduce_54,
  2, 45, :_reduce_55,
  4, 45, :_reduce_56,
  2, 66, :_reduce_57,
  3, 66, :_reduce_58,
  1, 67, :_reduce_59,
  3, 67, :_reduce_60,
  3, 47, :_reduce_61,
  3, 47, :_reduce_62,
  3, 47, :_reduce_63,
  3, 47, :_reduce_64,
  3, 47, :_reduce_65,
  3, 47, :_reduce_66,
  3, 47, :_reduce_67,
  3, 47, :_reduce_68,
  3, 47, :_reduce_69,
  3, 47, :_reduce_70,
  3, 47, :_reduce_71,
  3, 47, :_reduce_72,
  2, 47, :_reduce_73,
  0, 56, :_reduce_74,
  1, 56, :_reduce_75,
  3, 56, :_reduce_76,
  5, 49, :_reduce_77,
  8, 49, :_reduce_78,
  5, 50, :_reduce_79 ]

racc_reduce_n = 80

racc_shift_n = 127

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :WHILE => 4,
  :NEWLINE => 5,
  :INTEGER => 6,
  :STRING => 7,
  :TRUE => 8,
  :FALSE => 9,
  :NIL => 10,
  :IDENTIFIER => 11,
  :END => 12,
  :UMINUS => 13,
  "." => 14,
  "!" => 15,
  "*" => 16,
  "/" => 17,
  "+" => 18,
  "-" => 19,
  ">" => 20,
  ">=" => 21,
  "<" => 22,
  "<=" => 23,
  "==" => 24,
  "!=" => 25,
  "&&" => 26,
  "||" => 27,
  "=" => 28,
  "," => 29,
  ";" => 30,
  "(" => 31,
  ")" => 32,
  "->" => 33,
  "[" => 34,
  "]" => 35,
  ":" => 36,
  "{" => 37,
  "}" => 38 }

racc_nt_base = 39

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "WHILE",
  "NEWLINE",
  "INTEGER",
  "STRING",
  "TRUE",
  "FALSE",
  "NIL",
  "IDENTIFIER",
  "END",
  "UMINUS",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"==\"",
  "\"!=\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\",\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "\"->\"",
  "\"[\"",
  "\"]\"",
  "\":\"",
  "\"{\"",
  "\"}\"",
  "$start",
  "Root",
  "Expressions",
  "Expression",
  "Terminator",
  "Literal",
  "Call",
  "SlotAssign",
  "Operator",
  "LocalAssign",
  "If",
  "While",
  "SlotGet",
  "Identifier",
  "Function",
  "Array",
  "Tuple",
  "ParamList",
  "LBracket",
  "ArrayList",
  "RBracket",
  "ArrayListElement",
  "LBrace",
  "TupleList",
  "RBrace",
  "TupleListElement",
  "TupleKey",
  "ArgListWithParens",
  "ArgList" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'noscript.y', 33)
  def _reduce_1(val, _values, result)
     result = Script.new(lineno, filename, Nodes.new(lineno, [])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 34)
  def _reduce_2(val, _values, result)
     result = Script.new(lineno, filename, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 39)
  def _reduce_3(val, _values, result)
     result = Nodes.new(lineno, val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 40)
  def _reduce_4(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 42)
  def _reduce_5(val, _values, result)
     result = val[0].is_a?(Nodes) ? val[0] : Nodes.new(lineno, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 43)
  def _reduce_6(val, _values, result)
     result = Nodes.new(lineno, []) 
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

module_eval(<<'.,.,', 'noscript.y', 63)
  def _reduce_18(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 68)
  def _reduce_19(val, _values, result)
     result = FixnumLiteral.new(lineno, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 69)
  def _reduce_20(val, _values, result)
     result = StringLiteral.new(lineno, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 70)
  def _reduce_21(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 71)
  def _reduce_22(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 72)
  def _reduce_23(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 73)
  def _reduce_24(val, _values, result)
     result = TrueLiteral.new(lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 74)
  def _reduce_25(val, _values, result)
     result = FalseLiteral.new(lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 75)
  def _reduce_26(val, _values, result)
     result = NilLiteral.new(lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 86)
  def _reduce_27(val, _values, result)
     result = FunctionLiteral.new(lineno, val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 90)
  def _reduce_28(val, _values, result)
     result = ArrayLiteral.new(lineno, val[1]) 
    result
  end
.,.,

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

module_eval(<<'.,.,', 'noscript.y', 104)
  def _reduce_33(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 105)
  def _reduce_34(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 106)
  def _reduce_35(val, _values, result)
     result = val[0] += [val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 110)
  def _reduce_36(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 111)
  def _reduce_37(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 112)
  def _reduce_38(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 116)
  def _reduce_39(val, _values, result)
     result = HashLiteral.new(lineno, val[1].flatten) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 120)
  def _reduce_40(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 121)
  def _reduce_41(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 122)
  def _reduce_42(val, _values, result)
     result = val[0] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 126)
  def _reduce_43(val, _values, result)
     result = [StringLiteral.new(lineno, val[0].name), val[2]] 
    result
  end
.,.,

# reduce 44 omitted

module_eval(<<'.,.,', 'noscript.y', 131)
  def _reduce_45(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

module_eval(<<'.,.,', 'noscript.y', 145)
  def _reduce_50(val, _values, result)
     result = Identifier.new(lineno, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 150)
  def _reduce_51(val, _values, result)
     result = LocalVariableAssignment.new(lineno, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 155)
  def _reduce_52(val, _values, result)
     result = SlotAssign.new(lineno, val[0], val[2], val[4]) 
    result
  end
.,.,

# reduce 53 omitted

module_eval(<<'.,.,', 'noscript.y', 161)
  def _reduce_54(val, _values, result)
     result = SlotGet.new(lineno, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 167)
  def _reduce_55(val, _values, result)
     result = CallNode.new(lineno, nil, val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 170)
  def _reduce_56(val, _values, result)
     result = CallNode.new(lineno, val[0], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 174)
  def _reduce_57(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 175)
  def _reduce_58(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 179)
  def _reduce_59(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 180)
  def _reduce_60(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 185)
  def _reduce_61(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 186)
  def _reduce_62(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 187)
  def _reduce_63(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 188)
  def _reduce_64(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 189)
  def _reduce_65(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 190)
  def _reduce_66(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 191)
  def _reduce_67(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 192)
  def _reduce_68(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 195)
  def _reduce_69(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 196)
  def _reduce_70(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 197)
  def _reduce_71(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 198)
  def _reduce_72(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 200)
  def _reduce_73(val, _values, result)
     result = CallNode.new(lineno, val[1], val[0], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 204)
  def _reduce_74(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 205)
  def _reduce_75(val, _values, result)
     result = [val[0].name] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 206)
  def _reduce_76(val, _values, result)
     result = val[0] << val[2].name 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 212)
  def _reduce_77(val, _values, result)
     result = IfNode.new(lineno, val[1], val[3], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 217)
  def _reduce_78(val, _values, result)
     result = IfNode.new(lineno, val[1], val[3], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 223)
  def _reduce_79(val, _values, result)
     result = WhileNode.new(lineno, val[1], val[3]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Noscript


