#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.7
# from Racc grammer file "".
#

require 'racc/parser.rb'

#
# generated by racc
#
require_relative 'lexer'

module Noscript
  class Parser < Racc::Parser

module_eval(<<'...end noscript.y/module_eval...', 'noscript.y', 239)

include AST

...end noscript.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    -1,    70,    32,    98,    33,     5,    17,    18,    22,    23,
    24,    30,    57,     5,    -5,    31,    32,    -5,    33,    -5,
    17,    18,    22,    23,    24,    30,    -5,    96,     5,    31,
     6,    16,    52,    25,    27,    62,    97,    29,     6,    64,
    63,    61,    66,    62,    -5,    16,    91,    25,    27,    61,
    32,    29,    33,     6,    17,    18,    22,    23,    24,    30,
    32,   112,    33,    31,    17,    18,    22,    23,    24,    30,
    92,   118,   107,    31,   117,    66,    90,    52,   125,    16,
     5,    25,    27,   115,    36,    29,    36,   124,    36,    16,
    72,    25,    27,     5,    32,    29,    33,     5,    17,    18,
    22,    23,    24,    30,   129,     6,    32,    31,    33,     5,
    17,    18,    22,    23,    24,    30,   100,    87,     6,    31,
    99,    34,     6,    16,    88,    25,    27,   nil,    36,    29,
    47,    48,    45,    46,     6,    16,   nil,    25,    27,   nil,
    32,    29,    33,    56,    17,    18,    22,    23,    24,    30,
   nil,   nil,    32,    31,    33,     5,    17,    18,    22,    23,
    24,    30,   nil,   nil,   nil,    31,   nil,   -33,   nil,    16,
   nil,    25,    27,   -33,    36,    29,    47,    48,    45,    46,
     6,    16,   nil,    25,    27,   nil,    32,    29,    33,     5,
    17,    18,    22,    23,    24,    30,   122,   nil,    32,    31,
    33,    56,    17,    18,    22,    23,    24,    30,   nil,   nil,
    36,    31,    47,    48,     6,    16,   nil,    25,    27,   nil,
    36,    29,    47,    48,    45,    46,   nil,    16,     5,    25,
    27,   nil,    32,    29,    33,   126,    17,    18,    22,    23,
    24,    30,    32,   nil,    33,    31,    17,    18,    22,    23,
    24,    30,   nil,     6,    36,    31,    47,    48,    45,    46,
   nil,    16,   nil,    25,    27,   nil,    36,    29,    47,    48,
   nil,    16,   nil,    25,    27,   nil,    32,    29,    33,   nil,
    17,    18,    22,    23,    24,    30,    32,   nil,    33,    31,
    17,    18,    22,    23,    24,    30,   nil,   nil,   nil,    31,
   nil,   nil,   nil,   nil,   nil,    16,   nil,    25,    27,   nil,
   nil,    29,   nil,   nil,   nil,    16,   nil,    25,    27,   nil,
    32,    29,    33,     5,    17,    18,    22,    23,    24,    30,
   nil,   nil,    32,    31,    33,     5,    17,    18,    22,    23,
    24,    30,   nil,   nil,   nil,    31,   nil,   nil,     6,    16,
   nil,    25,    27,   nil,   nil,    29,   nil,   nil,   nil,   nil,
     6,    16,   nil,    25,    27,   nil,    32,    29,    33,   nil,
    17,    18,    22,    23,    24,    30,    32,   nil,    33,    31,
    17,    18,    22,    23,    24,    30,   nil,   nil,   nil,    31,
   nil,   nil,   nil,   nil,   nil,    16,   103,    25,    27,   nil,
   nil,    29,   nil,   nil,   nil,    16,   nil,    25,    27,   nil,
    32,    29,    33,   nil,    17,    18,    22,    23,    24,    30,
    32,   nil,    33,    31,    17,    18,    22,    23,    24,    30,
   nil,   nil,   nil,    31,   nil,   nil,   nil,   nil,   nil,    16,
   nil,    25,    27,   nil,   nil,    29,   nil,   nil,   nil,    16,
   nil,    25,    27,   nil,    32,    29,    33,   nil,    17,    18,
    22,    23,    24,    30,    32,   nil,    33,    31,    17,    18,
    22,    23,    24,    30,   nil,   nil,   nil,    31,   nil,   nil,
   nil,   nil,   nil,    16,   nil,    25,    27,   nil,   nil,    29,
   nil,   nil,   nil,    16,   nil,    25,    27,   nil,    32,    29,
    33,   nil,    17,    18,    22,    23,    24,    30,    32,   nil,
    33,    31,    17,    18,    22,    23,    24,    30,   nil,   nil,
   nil,    31,   nil,   nil,   nil,   nil,   nil,    16,   nil,    25,
    27,   nil,   nil,    29,   nil,   nil,   nil,    16,   nil,    25,
    27,   nil,    32,    29,    33,   nil,    17,    18,    22,    23,
    24,    30,    32,   nil,    33,    31,    17,    18,    22,    23,
    24,    30,   nil,   nil,   nil,    31,   nil,   nil,   nil,   nil,
   nil,    16,   nil,    25,    27,   nil,   nil,    29,   nil,   nil,
   nil,    16,   nil,    25,    27,   nil,    32,    29,    33,   nil,
    17,    18,    22,    23,    24,    30,    32,   nil,    33,    31,
    17,    18,    22,    23,    24,    30,   nil,   nil,   nil,    31,
   nil,   nil,   nil,   nil,   nil,    16,   nil,    25,    27,   nil,
   nil,    29,   nil,   nil,   nil,    16,   nil,    25,    27,   nil,
    32,    29,    33,   nil,    17,    18,    22,    23,    24,    30,
    32,   nil,    33,    31,    17,    18,    22,    23,    24,    30,
   nil,   nil,   nil,    31,   nil,   nil,   nil,   nil,   nil,    16,
   nil,    25,    27,   nil,   nil,    29,   nil,   nil,   nil,    16,
   nil,    25,    27,   nil,    32,    29,    33,     5,    17,    18,
    22,    23,    24,    30,   nil,   nil,    36,    31,    47,    48,
    45,    46,    41,    42,    43,    44,    39,    40,    38,    37,
   nil,     5,     6,    16,   nil,    25,    27,   nil,   nil,    29,
    36,   nil,    47,    48,    45,    46,    41,    42,    43,    44,
    39,    40,    38,    37,    93,   nil,     6,   nil,   nil,   nil,
   nil,   nil,   nil,    36,   nil,    47,    48,    45,    46,    41,
    42,    43,    44,    39,    40,    38,    37,    36,   nil,    47,
    48,    45,    46,    41,    42,    43,    44,    39,    40,    38,
    37,   nil,   nil,   nil,    36,    85,    47,    48,    45,    46,
    41,    42,    43,    44,    39,    40,    38,    37,    36,   nil,
    47,    48,    45,    46,    41,    42,    43,    44,    39,    40,
    38,    37,    36,   nil,    47,    48,    45,    46,    41,    42,
    43,    44,    39,    40,    38,    37,    36,   nil,    47,    48,
    45,    46,    41,    42,    43,    44,    39,    40,    38,    37,
    36,   nil,    47,    48,    45,    46,    41,    42,    43,    44,
    39,    40,    38,    37,    36,   nil,    47,    48,    45,    46,
    41,    42,    43,    44,    39,    40,    38,    37,    36,   nil,
    47,    48,    45,    46,    41,    42,    43,    44,    39,    40,
    38,    37,    36,   nil,    47,    48,    45,    46,    41,    42,
    43,    44,    39,    40,    38,    37,    36,   nil,    47,    48,
    45,    46,    41,    42,    43,    44,    39,    40,    38,    37,
    36,   nil,    47,    48,    45,    46,    41,    42,    43,    44,
    39,    40,    38,    36,   nil,    47,    48,    45,    46,    41,
    42,    43,    44,    39,    40,    36,   nil,    47,    48,    45,
    46,    41,    42,    43,    44,    36,   nil,    47,    48,    45,
    46,    41,    42,    43,    44 ]

racc_action_check = [
     0,    34,     0,    58,     0,     0,     0,     0,     0,     0,
     0,     0,    27,     2,    35,     0,    35,    35,    35,    35,
    35,    35,    35,    35,    35,    35,    35,    58,   125,    35,
     0,     0,    25,     0,     0,    96,    58,     0,     2,    30,
    29,    96,    30,    28,    35,    35,    53,    35,    35,    28,
   118,    35,   118,   125,   118,   118,   118,   118,   118,   118,
   107,    91,   107,   118,   107,   107,   107,   107,   107,   107,
    53,   104,    72,   107,   104,    72,    53,    87,   119,   118,
   119,   118,   118,    98,    84,   118,    83,   119,    67,   107,
    36,   107,   107,    50,    16,   107,    16,   128,    16,    16,
    16,    16,    16,    16,   128,   119,   106,    16,   106,   106,
   106,   106,   106,   106,   106,   106,    62,    50,    50,   106,
    60,     1,   128,    16,    52,    16,    16,   nil,    79,    16,
    79,    79,    79,    79,   106,   106,   nil,   106,   106,   nil,
    26,   106,    26,    26,    26,    26,    26,    26,    26,    26,
   nil,   nil,   105,    26,   105,   105,   105,   105,   105,   105,
   105,   105,   nil,   nil,   nil,   105,   nil,    26,   nil,    26,
   nil,    26,    26,    26,    80,    26,    80,    80,    80,    80,
   105,   105,   nil,   105,   105,   nil,    99,   105,    99,   109,
    99,    99,    99,    99,    99,    99,   109,   nil,    92,    99,
    92,    92,    92,    92,    92,    92,    92,    92,   nil,   nil,
    82,    92,    82,    82,   109,    99,   nil,    99,    99,   nil,
    78,    99,    78,    78,    78,    78,   nil,    92,   120,    92,
    92,   nil,    88,    92,    88,   120,    88,    88,    88,    88,
    88,    88,    31,   nil,    31,    88,    31,    31,    31,    31,
    31,    31,   nil,   120,    77,    31,    77,    77,    77,    77,
   nil,    88,   nil,    88,    88,   nil,    81,    88,    81,    81,
   nil,    31,   nil,    31,    31,   nil,    32,    31,    32,   nil,
    32,    32,    32,    32,    32,    32,    33,   nil,    33,    32,
    33,    33,    33,    33,    33,    33,   nil,   nil,   nil,    33,
   nil,   nil,   nil,   nil,   nil,    32,   nil,    32,    32,   nil,
   nil,    32,   nil,   nil,   nil,    33,   nil,    33,    33,   nil,
    86,    33,    86,    86,    86,    86,    86,    86,    86,    86,
   nil,   nil,   127,    86,   127,   127,   127,   127,   127,   127,
   127,   127,   nil,   nil,   nil,   127,   nil,   nil,    86,    86,
   nil,    86,    86,   nil,   nil,    86,   nil,   nil,   nil,   nil,
   127,   127,   nil,   127,   127,   nil,    66,   127,    66,   nil,
    66,    66,    66,    66,    66,    66,    37,   nil,    37,    66,
    37,    37,    37,    37,    37,    37,   nil,   nil,   nil,    37,
   nil,   nil,   nil,   nil,   nil,    66,    66,    66,    66,   nil,
   nil,    66,   nil,   nil,   nil,    37,   nil,    37,    37,   nil,
    38,    37,    38,   nil,    38,    38,    38,    38,    38,    38,
    39,   nil,    39,    38,    39,    39,    39,    39,    39,    39,
   nil,   nil,   nil,    39,   nil,   nil,   nil,   nil,   nil,    38,
   nil,    38,    38,   nil,   nil,    38,   nil,   nil,   nil,    39,
   nil,    39,    39,   nil,    56,    39,    56,   nil,    56,    56,
    56,    56,    56,    56,    41,   nil,    41,    56,    41,    41,
    41,    41,    41,    41,   nil,   nil,   nil,    41,   nil,   nil,
   nil,   nil,   nil,    56,   nil,    56,    56,   nil,   nil,    56,
   nil,   nil,   nil,    41,   nil,    41,    41,   nil,    42,    41,
    42,   nil,    42,    42,    42,    42,    42,    42,    43,   nil,
    43,    42,    43,    43,    43,    43,    43,    43,   nil,   nil,
   nil,    43,   nil,   nil,   nil,   nil,   nil,    42,   nil,    42,
    42,   nil,   nil,    42,   nil,   nil,   nil,    43,   nil,    43,
    43,   nil,    44,    43,    44,   nil,    44,    44,    44,    44,
    44,    44,    45,   nil,    45,    44,    45,    45,    45,    45,
    45,    45,   nil,   nil,   nil,    45,   nil,   nil,   nil,   nil,
   nil,    44,   nil,    44,    44,   nil,   nil,    44,   nil,   nil,
   nil,    45,   nil,    45,    45,   nil,    46,    45,    46,   nil,
    46,    46,    46,    46,    46,    46,    47,   nil,    47,    46,
    47,    47,    47,    47,    47,    47,   nil,   nil,   nil,    47,
   nil,   nil,   nil,   nil,   nil,    46,   nil,    46,    46,   nil,
   nil,    46,   nil,   nil,   nil,    47,   nil,    47,    47,   nil,
    48,    47,    48,   nil,    48,    48,    48,    48,    48,    48,
    64,   nil,    64,    48,    64,    64,    64,    64,    64,    64,
   nil,   nil,   nil,    64,   nil,   nil,   nil,   nil,   nil,    48,
   nil,    48,    48,   nil,   nil,    48,   nil,   nil,   nil,    64,
   nil,    64,    64,   nil,    40,    64,    40,    68,    40,    40,
    40,    40,    40,    40,   nil,   nil,    68,    40,    68,    68,
    68,    68,    68,    68,    68,    68,    68,    68,    68,    68,
   nil,    69,    68,    40,   nil,    40,    40,   nil,   nil,    40,
    69,   nil,    69,    69,    69,    69,    69,    69,    69,    69,
    69,    69,    69,    69,    55,   nil,    69,   nil,   nil,   nil,
   nil,   nil,   nil,    55,   nil,    55,    55,    55,    55,    55,
    55,    55,    55,    55,    55,    55,    55,    49,   nil,    49,
    49,    49,    49,    49,    49,    49,    49,    49,    49,    49,
    49,   nil,   nil,   nil,   121,    49,   121,   121,   121,   121,
   121,   121,   121,   121,   121,   121,   121,   121,    94,   nil,
    94,    94,    94,    94,    94,    94,    94,    94,    94,    94,
    94,    94,     3,   nil,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,   101,   nil,   101,   101,
   101,   101,   101,   101,   101,   101,   101,   101,   101,   101,
   111,   nil,   111,   111,   111,   111,   111,   111,   111,   111,
   111,   111,   111,   111,   123,   nil,   123,   123,   123,   123,
   123,   123,   123,   123,   123,   123,   123,   123,   116,   nil,
   116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
   116,   116,    71,   nil,    71,    71,    71,    71,    71,    71,
    71,    71,    71,    71,    71,    71,   102,   nil,   102,   102,
   102,   102,   102,   102,   102,   102,   102,   102,   102,   102,
    73,   nil,    73,    73,    73,    73,    73,    73,    73,    73,
    73,    73,    73,    74,   nil,    74,    74,    74,    74,    74,
    74,    74,    74,    74,    74,    76,   nil,    76,    76,    76,
    76,    76,    76,    76,    76,    75,   nil,    75,    75,    75,
    75,    75,    75,    75,    75 ]

racc_action_pointer = [
     0,   121,     8,   778,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    92,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    21,   138,     7,    38,    35,
    11,   240,   274,   284,     1,    14,    79,   374,   408,   418,
   672,   462,   496,   506,   540,   550,   584,   594,   628,   733,
    88,   nil,    96,    41,   nil,   719,   452,   nil,    -2,   nil,
    84,   nil,   105,   nil,   638,   nil,   364,    74,   672,   696,
   nil,   848,    44,   876,   889,   911,   901,   240,   206,   114,
   160,   252,   196,    72,    70,   nil,   318,    66,   230,   nil,
   nil,    26,   196,   nil,   764,   nil,    30,   nil,    45,   184,
   nil,   792,   862,   nil,    42,   150,   104,    58,   nil,   184,
   nil,   806,   nil,   nil,   nil,   nil,   834,   nil,    48,    75,
   223,   750,   nil,   820,   nil,    23,   nil,   330,    92,   nil ]

racc_action_default = [
   -53,   -82,    -2,    -3,    -6,    -7,    -8,    -9,   -10,   -11,
   -12,   -13,   -14,   -15,   -16,   -17,   -53,   -19,   -20,   -21,
   -22,   -23,   -24,   -25,   -26,   -74,   -53,   -29,   -40,   -46,
   -50,   -53,   -53,   -53,   -82,   -53,   -82,   -53,   -53,   -53,
   -53,   -53,   -53,   -53,   -53,   -53,   -53,   -53,   -53,   -82,
   -82,   -75,   -78,   -82,   -34,   -36,   -53,   -30,   -82,   -41,
   -82,   -44,   -82,   -47,   -53,   -55,   -53,   -73,   -82,   -82,
   130,    -4,   -54,   -61,   -62,   -63,   -64,   -65,   -66,   -67,
   -68,   -69,   -70,   -71,   -72,   -18,   -53,   -82,   -53,   -28,
   -31,   -82,   -53,   -38,   -37,   -39,   -82,   -48,   -82,   -53,
   -45,   -51,   -59,   -57,   -82,   -53,   -53,   -53,   -56,   -82,
   -76,   -77,   -32,   -35,   -42,   -49,   -43,   -58,   -53,   -82,
   -82,   -52,   -27,   -60,   -79,   -82,   -81,   -53,   -82,   -80 ]

racc_goto_table = [
     2,    49,    35,    59,    54,    51,    65,    50,    58,    95,
    53,    55,    89,   104,     1,   nil,    67,    68,    69,   nil,
    71,   nil,    73,    74,    75,    76,    77,    78,    79,    80,
    81,    82,    83,    84,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    94,   nil,   nil,   nil,   nil,   nil,   nil,   108,   101,
    86,   102,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   110,   105,   106,
   113,   114,   nil,   111,   nil,   nil,   nil,    55,   nil,   nil,
   nil,   nil,   nil,   nil,   116,   nil,   109,   nil,   nil,   nil,
   nil,   nil,   121,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   123,   nil,   119,   120,   nil,   nil,    35,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    35,
    35,   nil,   nil,   nil,   nil,   127,   nil,   128,    35 ]

racc_goto_check = [
     2,     3,     4,    25,    21,    29,    27,    17,    23,    24,
    19,     3,    20,    28,     1,   nil,     3,     3,     3,   nil,
     3,   nil,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,    27,     3,
     4,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    29,     4,     4,
    21,    25,   nil,     3,   nil,   nil,   nil,     3,   nil,   nil,
   nil,   nil,   nil,   nil,     3,   nil,     2,   nil,   nil,   nil,
   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     3,   nil,     2,     2,   nil,   nil,     4,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,
     4,   nil,   nil,   nil,   nil,     4,   nil,     2,     4 ]

racc_goto_pointer = [
   nil,    14,     0,   -15,     0,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -18,   nil,   -16,
   -41,   -22,   nil,   -20,   -49,   -25,   nil,   -24,   -53,   -20 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     7,     8,     9,    10,    11,
    12,    13,    14,    15,    19,    20,    21,   nil,    26,   nil,
   nil,   nil,    28,   nil,   nil,   nil,    60,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 40, :_reduce_1,
  1, 40, :_reduce_2,
  1, 41, :_reduce_3,
  3, 41, :_reduce_4,
  2, 41, :_reduce_5,
  1, 41, :_reduce_6,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  3, 42, :_reduce_18,
  1, 44, :_reduce_19,
  1, 44, :_reduce_20,
  1, 44, :_reduce_21,
  1, 44, :_reduce_22,
  1, 44, :_reduce_23,
  1, 44, :_reduce_24,
  1, 44, :_reduce_25,
  1, 44, :_reduce_26,
  5, 53, :_reduce_27,
  3, 54, :_reduce_28,
  1, 57, :_reduce_none,
  2, 57, :_reduce_none,
  1, 59, :_reduce_none,
  2, 59, :_reduce_none,
  0, 58, :_reduce_33,
  1, 58, :_reduce_34,
  3, 58, :_reduce_35,
  1, 60, :_reduce_36,
  2, 60, :_reduce_37,
  2, 60, :_reduce_38,
  3, 55, :_reduce_39,
  0, 62, :_reduce_40,
  1, 62, :_reduce_41,
  3, 62, :_reduce_42,
  3, 64, :_reduce_43,
  1, 65, :_reduce_none,
  2, 65, :_reduce_45,
  1, 61, :_reduce_none,
  2, 61, :_reduce_none,
  1, 63, :_reduce_none,
  2, 63, :_reduce_none,
  1, 52, :_reduce_none,
  3, 48, :_reduce_51,
  5, 46, :_reduce_52,
  0, 51, :_reduce_none,
  3, 51, :_reduce_54,
  2, 45, :_reduce_55,
  4, 45, :_reduce_56,
  2, 66, :_reduce_57,
  3, 66, :_reduce_58,
  1, 67, :_reduce_59,
  3, 67, :_reduce_60,
  3, 47, :_reduce_61,
  3, 47, :_reduce_62,
  3, 47, :_reduce_63,
  3, 47, :_reduce_64,
  3, 47, :_reduce_65,
  3, 47, :_reduce_66,
  3, 47, :_reduce_67,
  3, 47, :_reduce_68,
  3, 47, :_reduce_69,
  3, 47, :_reduce_70,
  3, 47, :_reduce_71,
  3, 47, :_reduce_72,
  2, 47, :_reduce_73,
  0, 56, :_reduce_74,
  1, 56, :_reduce_75,
  3, 56, :_reduce_76,
  3, 68, :_reduce_77,
  1, 68, :_reduce_78,
  5, 49, :_reduce_79,
  8, 49, :_reduce_80,
  5, 50, :_reduce_81 ]

racc_reduce_n = 82

racc_shift_n = 130

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :WHILE => 4,
  :NEWLINE => 5,
  :INTEGER => 6,
  :STRING => 7,
  :TRUE => 8,
  :FALSE => 9,
  :NIL => 10,
  :IDENTIFIER => 11,
  :END => 12,
  :UMINUS => 13,
  "." => 14,
  "!" => 15,
  "*" => 16,
  "/" => 17,
  "+" => 18,
  "-" => 19,
  ">" => 20,
  ">=" => 21,
  "<" => 22,
  "<=" => 23,
  "==" => 24,
  "!=" => 25,
  "&&" => 26,
  "||" => 27,
  "=" => 28,
  "," => 29,
  ";" => 30,
  "(" => 31,
  ")" => 32,
  "->" => 33,
  "[" => 34,
  "]" => 35,
  ":" => 36,
  "{" => 37,
  "}" => 38 }

racc_nt_base = 39

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "WHILE",
  "NEWLINE",
  "INTEGER",
  "STRING",
  "TRUE",
  "FALSE",
  "NIL",
  "IDENTIFIER",
  "END",
  "UMINUS",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"==\"",
  "\"!=\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\",\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "\"->\"",
  "\"[\"",
  "\"]\"",
  "\":\"",
  "\"{\"",
  "\"}\"",
  "$start",
  "Root",
  "Expressions",
  "Expression",
  "Terminator",
  "Literal",
  "Call",
  "SlotAssign",
  "Operator",
  "LocalAssign",
  "If",
  "While",
  "SlotGet",
  "Identifier",
  "Function",
  "Array",
  "Tuple",
  "ParamList",
  "LBracket",
  "ArrayList",
  "RBracket",
  "ArrayListElement",
  "LBrace",
  "TupleList",
  "RBrace",
  "TupleListElement",
  "TupleKey",
  "ArgListWithParens",
  "ArgList",
  "Parameter" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'noscript.y', 33)
  def _reduce_1(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 34)
  def _reduce_2(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 39)
  def _reduce_3(val, _values, result)
     result = Nodes.new(val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 40)
  def _reduce_4(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 42)
  def _reduce_5(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 43)
  def _reduce_6(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

module_eval(<<'.,.,', 'noscript.y', 63)
  def _reduce_18(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 68)
  def _reduce_19(val, _values, result)
     result = IntegerNode.new(val[0]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 69)
  def _reduce_20(val, _values, result)
     result = StringNode.new(val[0]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 70)
  def _reduce_21(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 71)
  def _reduce_22(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 72)
  def _reduce_23(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 73)
  def _reduce_24(val, _values, result)
     result = TrueNode.new; result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 74)
  def _reduce_25(val, _values, result)
     result = FalseNode.new; result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 75)
  def _reduce_26(val, _values, result)
     result = NilNode.new; result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 86)
  def _reduce_27(val, _values, result)
     result = FunctionNode.new(val[1], val[3]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 90)
  def _reduce_28(val, _values, result)
     result = ArrayNode.new(val[1]); result.pos(filename, lineno)
    result
  end
.,.,

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

module_eval(<<'.,.,', 'noscript.y', 104)
  def _reduce_33(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 105)
  def _reduce_34(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 106)
  def _reduce_35(val, _values, result)
     result = val[0] += [val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 110)
  def _reduce_36(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 111)
  def _reduce_37(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 112)
  def _reduce_38(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 116)
  def _reduce_39(val, _values, result)
     result = TupleNode.new(val[1]); result.pos(filename, lineno)
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 120)
  def _reduce_40(val, _values, result)
     result = {} 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 121)
  def _reduce_41(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 122)
  def _reduce_42(val, _values, result)
     result = val[0].merge!(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 126)
  def _reduce_43(val, _values, result)
     result = { val[0] => val[2] } 
    result
  end
.,.,

# reduce 44 omitted

module_eval(<<'.,.,', 'noscript.y', 131)
  def _reduce_45(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

module_eval(<<'.,.,', 'noscript.y', 150)
  def _reduce_51(val, _values, result)
     result = LocalAssignNode.new(val[0], val[2]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 155)
  def _reduce_52(val, _values, result)
     result = SlotAssignNode.new(val[0], val[2], val[4]); result.pos(filename, lineno) 
    result
  end
.,.,

# reduce 53 omitted

module_eval(<<'.,.,', 'noscript.y', 161)
  def _reduce_54(val, _values, result)
     result = SlotGetNode.new(val[0], val[2]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 167)
  def _reduce_55(val, _values, result)
     result = CallNode.new(nil, val[0], val[1]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 170)
  def _reduce_56(val, _values, result)
     result = CallNode.new(val[0], val[2], val[3]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 174)
  def _reduce_57(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 175)
  def _reduce_58(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 179)
  def _reduce_59(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 180)
  def _reduce_60(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 185)
  def _reduce_61(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 186)
  def _reduce_62(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 187)
  def _reduce_63(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 188)
  def _reduce_64(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 189)
  def _reduce_65(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 190)
  def _reduce_66(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 191)
  def _reduce_67(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 192)
  def _reduce_68(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 195)
  def _reduce_69(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno)
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 196)
  def _reduce_70(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno)
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 197)
  def _reduce_71(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno)
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 198)
  def _reduce_72(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]); result.pos(filename, lineno)
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 200)
  def _reduce_73(val, _values, result)
     result = CallNode.new(val[1], val[0], []); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 204)
  def _reduce_74(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 205)
  def _reduce_75(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 206)
  def _reduce_76(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 210)
  def _reduce_77(val, _values, result)
     result = ParameterNode.new(val[0], val[2]); result.pos(filename, lineno)
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 211)
  def _reduce_78(val, _values, result)
     result = ParameterNode.new(val[0]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 217)
  def _reduce_79(val, _values, result)
     result = IfNode.new(val[1], val[3], nil); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 222)
  def _reduce_80(val, _values, result)
     result = IfNode.new(val[1], val[3], val[6]); result.pos(filename, lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 228)
  def _reduce_81(val, _values, result)
     result = WhileNode.new(val[1], val[3]); result.pos(filename, lineno) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Noscript


