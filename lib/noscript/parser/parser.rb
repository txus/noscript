#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.7
# from Racc grammer file "".
#

require 'racc/parser.rb'

#
# generated by racc
#
require_relative 'lexer'

module Noscript
  class Parser < Racc::Parser

module_eval(<<'...end noscript.y/module_eval...', 'noscript.y', 235)

include AST

def parse(code)
  parse_string(code, filename)
end

...end noscript.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    -1,    37,    33,     5,    34,     5,    17,    18,    22,    23,
    24,    30,    65,   110,    65,    31,   109,    30,    30,    32,
    30,    37,    30,    48,    49,   102,    95,     5,     6,     5,
     6,    16,   107,    25,    27,    52,    -5,    29,    33,    -5,
    34,    -5,    17,    18,    22,    23,    24,    30,    -5,   100,
    96,    31,     6,    92,     6,    32,    94,     5,   101,   124,
    37,     5,    48,    49,   125,   113,    -5,    16,   123,    25,
    27,    37,    33,    29,    34,    60,    17,    18,    22,    23,
    24,    30,     6,    71,     5,    31,     6,    50,    30,    32,
    52,   122,     5,    37,    30,    48,    49,    46,    47,   128,
   103,    16,    66,    25,    27,   116,    33,    29,    34,     6,
    17,    18,    22,    23,    24,    30,    37,     6,    37,    31,
    48,    49,    37,    32,    48,    49,    46,    47,    42,    43,
    44,    45,    40,    41,    39,    16,    35,    25,    27,   nil,
    33,    29,    34,   nil,    17,    18,    22,    23,    24,    30,
   nil,   nil,   nil,    31,   nil,   nil,    37,    32,    48,    49,
    46,    47,    42,    43,    44,    45,    40,    41,   nil,    16,
   nil,    25,    27,   nil,    33,    29,    34,   nil,    17,    18,
    22,    23,    24,    30,   nil,   nil,   nil,    31,   nil,   nil,
    37,    32,    48,    49,    46,    47,    42,    43,    44,    45,
   nil,   nil,   nil,    16,   nil,    25,    27,   nil,    33,    29,
    34,   nil,    17,    18,    22,    23,    24,    30,   nil,   nil,
   nil,    31,   nil,   nil,    37,    32,    48,    49,    46,    47,
    42,    43,    44,    45,   nil,   nil,   nil,    16,   nil,    25,
    27,   nil,    33,    29,    34,   nil,    17,    18,    22,    23,
    24,    30,   nil,   nil,   nil,    31,   nil,   nil,    37,    32,
    48,    49,    46,    47,    37,   nil,    48,    49,    46,    47,
   nil,    16,   nil,    25,    27,   nil,    33,    29,    34,   nil,
    17,    18,    22,    23,    24,    30,   nil,   nil,   nil,    31,
   nil,   nil,    37,    32,    48,    49,    46,    47,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,   nil,    25,    27,   nil,
    33,    29,    34,   nil,    17,    18,    22,    23,    24,    30,
   nil,   nil,   nil,    31,   nil,   nil,   nil,    32,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,
   nil,    25,    27,   nil,    33,    29,    34,   nil,    17,    18,
    22,    23,    24,    30,   nil,   nil,   nil,    31,   nil,   nil,
   nil,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    16,   nil,    25,    27,   nil,    33,    29,
    34,   nil,    17,    18,    22,    23,    24,    30,   nil,   nil,
   nil,    31,   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,    25,
    27,   nil,    33,    29,    34,   nil,    17,    18,    22,    23,
    24,    30,   nil,   nil,   nil,    31,   nil,   nil,   nil,    32,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    16,    88,    25,    27,   nil,    33,    29,    34,   nil,
    17,    18,    22,    23,    24,    30,   nil,   nil,   nil,    31,
   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,   nil,    25,    27,   nil,
    33,    29,    34,   nil,    17,    18,    22,    23,    24,    30,
   nil,   nil,   nil,    31,   nil,   nil,   nil,    32,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,
   nil,    25,    27,   nil,    33,    29,    34,   nil,    17,    18,
    22,    23,    24,    30,   nil,   nil,   nil,    31,   nil,   nil,
   nil,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    16,   nil,    25,    27,   nil,    33,    29,
    34,     5,    17,    18,    22,    23,    24,    30,   nil,   nil,
   nil,    31,   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     6,    16,   nil,    25,
    27,   nil,    33,    29,    34,   nil,    17,    18,    22,    23,
    24,    30,   nil,   nil,   nil,    31,   nil,   nil,   nil,    32,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    16,   nil,    25,    27,   nil,    33,    29,    34,     5,
    17,    18,    22,    23,    24,    30,   nil,   nil,   nil,    31,
   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     6,    16,   nil,    25,    27,   nil,
    33,    29,    34,   nil,    17,    18,    22,    23,    24,    30,
   nil,   nil,   nil,    31,   nil,   nil,   nil,    32,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,
   nil,    25,    27,   nil,    33,    29,    34,    59,    17,    18,
    22,    23,    24,    30,   nil,   nil,   nil,    31,   nil,   nil,
   nil,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    16,   nil,    25,    27,   nil,    33,    29,
    34,   nil,    17,    18,    22,    23,    24,    30,   nil,   nil,
   nil,    31,   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,    25,
    27,   nil,    33,    29,    34,   nil,    17,    18,    22,    23,
    24,    30,   nil,   nil,   nil,    31,   nil,   nil,   nil,    32,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    16,   nil,    25,    27,   nil,    33,    29,    34,   nil,
    17,    18,    22,    23,    24,    30,   nil,   nil,   nil,    31,
   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,   nil,    25,    27,   nil,
    33,    29,    34,     5,    17,    18,    22,    23,    24,    30,
   nil,   nil,   nil,    31,   nil,   nil,   nil,    32,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,    16,
   nil,    25,    27,   nil,    33,    29,    34,    59,    17,    18,
    22,    23,    24,    30,   nil,   nil,   nil,    31,   nil,   nil,
   nil,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   -33,   nil,    16,   nil,    25,    27,   -33,    33,    29,
    34,     5,    17,    18,    22,    23,    24,    30,   nil,   nil,
   nil,    31,   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     6,    16,   nil,    25,
    27,   nil,    33,    29,    34,   nil,    17,    18,    22,    23,
    24,    30,   nil,   nil,   nil,    31,   nil,   nil,   nil,    32,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    16,   nil,    25,    27,   nil,    33,    29,    34,   nil,
    17,    18,    22,    23,    24,    30,   nil,   nil,   nil,    31,
   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,   nil,    25,    27,   nil,
    33,    29,    34,   nil,    17,    18,    22,    23,    24,    30,
   nil,   nil,   nil,    31,   nil,   nil,   nil,    32,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,
   nil,    25,    27,   nil,    33,    29,    34,   nil,    17,    18,
    22,    23,    24,    30,   nil,   nil,   nil,    31,   nil,   nil,
   nil,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,
   nil,   nil,   nil,    16,   nil,    25,    27,   nil,    37,    29,
    48,    49,    46,    47,    42,    43,    44,    45,    40,    41,
    39,    38,     5,   nil,     6,   nil,   nil,   nil,   nil,   nil,
   nil,    37,   nil,    48,    49,    46,    47,    42,    43,    44,
    45,    40,    41,    39,    38,    97,   nil,     6,   nil,   nil,
   nil,   nil,   nil,   nil,    37,   nil,    48,    49,    46,    47,
    42,    43,    44,    45,    40,    41,    39,    38,    37,   nil,
    48,    49,    46,    47,    42,    43,    44,    45,    40,    41,
    39,    38,   nil,   nil,   nil,    37,    90,    48,    49,    46,
    47,    42,    43,    44,    45,    40,    41,    39,    38,    37,
   nil,    48,    49,    46,    47,    42,    43,    44,    45,    40,
    41,    39,    38,    37,   nil,    48,    49,    46,    47,    42,
    43,    44,    45,    40,    41,    39,    38,    37,   nil,    48,
    49,    46,    47,    42,    43,    44,    45,    40,    41,    39,
    38,    37,   nil,    48,    49,    46,    47,    42,    43,    44,
    45,    40,    41,    39,    38,    37,   nil,    48,    49,    46,
    47,    42,    43,    44,    45,    40,    41,    39,    38,    37,
   nil,    48,    49,    46,    47,    42,    43,    44,    45,    40,
    41,    39,    38,    37,   nil,    48,    49,    46,    47,    42,
    43,    44,    45,    40,    41,    39,    38 ]

racc_action_check = [
     0,    67,     0,     2,     0,     0,     0,     0,     0,     0,
     0,     0,    28,    89,   100,     0,    89,    92,    28,     0,
   100,    68,    65,    68,    68,    61,    56,   124,     2,    54,
     0,     0,    73,     0,     0,    73,    36,     0,    36,    36,
    36,    36,    36,    36,    36,    36,    36,    36,    36,    61,
    56,    36,   124,    54,    54,    36,    56,   119,    61,   118,
    83,   118,    83,    83,   119,    95,    36,    36,   118,    36,
    36,    85,    45,    36,    45,    27,    45,    45,    45,    45,
    45,    45,   119,    35,   111,    45,   118,    15,    25,    45,
    15,   111,   127,    78,    37,    78,    78,    78,    78,   127,
    63,    45,    29,    45,    45,   102,    46,    45,    46,   111,
    46,    46,    46,    46,    46,    46,    84,   127,    82,    46,
    82,    82,    74,    46,    74,    74,    74,    74,    74,    74,
    74,    74,    74,    74,    74,    46,     1,    46,    46,   nil,
    47,    46,    47,   nil,    47,    47,    47,    47,    47,    47,
   nil,   nil,   nil,    47,   nil,   nil,    75,    47,    75,    75,
    75,    75,    75,    75,    75,    75,    75,    75,   nil,    47,
   nil,    47,    47,   nil,    31,    47,    31,   nil,    31,    31,
    31,    31,    31,    31,   nil,   nil,   nil,    31,   nil,   nil,
    77,    31,    77,    77,    77,    77,    77,    77,    77,    77,
   nil,   nil,   nil,    31,   nil,    31,    31,   nil,    48,    31,
    48,   nil,    48,    48,    48,    48,    48,    48,   nil,   nil,
   nil,    48,   nil,   nil,    76,    48,    76,    76,    76,    76,
    76,    76,    76,    76,   nil,   nil,   nil,    48,   nil,    48,
    48,   nil,    33,    48,    33,   nil,    33,    33,    33,    33,
    33,    33,   nil,   nil,   nil,    33,   nil,   nil,    80,    33,
    80,    80,    80,    80,    81,   nil,    81,    81,    81,    81,
   nil,    33,   nil,    33,    33,   nil,    49,    33,    49,   nil,
    49,    49,    49,    49,    49,    49,   nil,   nil,   nil,    49,
   nil,   nil,    79,    49,    79,    79,    79,    79,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    49,   nil,    49,    49,   nil,
    16,    49,    16,   nil,    16,    16,    16,    16,    16,    16,
   nil,   nil,   nil,    16,   nil,   nil,   nil,    16,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,
   nil,    16,    16,   nil,    50,    16,    50,   nil,    50,    50,
    50,    50,    50,    50,   nil,   nil,   nil,    50,   nil,   nil,
   nil,    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    50,   nil,    50,    50,   nil,    39,    50,
    39,   nil,    39,    39,    39,    39,    39,    39,   nil,   nil,
   nil,    39,   nil,   nil,   nil,    39,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    39,   nil,    39,
    39,   nil,    52,    39,    52,   nil,    52,    52,    52,    52,
    52,    52,   nil,   nil,   nil,    52,   nil,   nil,   nil,    52,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    52,    52,    52,    52,   nil,    41,    52,    41,   nil,
    41,    41,    41,    41,    41,    41,   nil,   nil,   nil,    41,
   nil,   nil,   nil,    41,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    41,   nil,    41,    41,   nil,
    59,    41,    59,   nil,    59,    59,    59,    59,    59,    59,
   nil,   nil,   nil,    59,   nil,   nil,   nil,    59,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    59,
   nil,    59,    59,   nil,    43,    59,    43,   nil,    43,    43,
    43,    43,    43,    43,   nil,   nil,   nil,    43,   nil,   nil,
   nil,    43,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    43,   nil,    43,    43,   nil,   126,    43,
   126,   126,   126,   126,   126,   126,   126,   126,   nil,   nil,
   nil,   126,   nil,   nil,   nil,   126,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   126,   126,   nil,   126,
   126,   nil,   110,   126,   110,   nil,   110,   110,   110,   110,
   110,   110,   nil,   nil,   nil,   110,   nil,   nil,   nil,   110,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   110,   nil,   110,   110,   nil,    91,   110,    91,    91,
    91,    91,    91,    91,    91,    91,   nil,   nil,   nil,    91,
   nil,   nil,   nil,    91,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    91,    91,   nil,    91,    91,   nil,
    32,    91,    32,   nil,    32,    32,    32,    32,    32,    32,
   nil,   nil,   nil,    32,   nil,   nil,   nil,    32,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    32,
   nil,    32,    32,   nil,    96,    32,    96,    96,    96,    96,
    96,    96,    96,    96,   nil,   nil,   nil,    96,   nil,   nil,
   nil,    96,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    96,   nil,    96,    96,   nil,    38,    96,
    38,   nil,    38,    38,    38,    38,    38,    38,   nil,   nil,
   nil,    38,   nil,   nil,   nil,    38,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,   nil,    38,
    38,   nil,   103,    38,   103,   nil,   103,   103,   103,   103,
   103,   103,   nil,   nil,   nil,   103,   nil,   nil,   nil,   103,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   103,   nil,   103,   103,   nil,    42,   103,    42,   nil,
    42,    42,    42,    42,    42,    42,   nil,   nil,   nil,    42,
   nil,   nil,   nil,    42,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    42,   nil,    42,    42,   nil,
   105,    42,   105,   105,   105,   105,   105,   105,   105,   105,
   nil,   nil,   nil,   105,   nil,   nil,   nil,   105,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   105,   105,
   nil,   105,   105,   nil,    26,   105,    26,    26,    26,    26,
    26,    26,    26,    26,   nil,   nil,   nil,    26,   nil,   nil,
   nil,    26,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    26,   nil,    26,   nil,    26,    26,    26,   106,    26,
   106,   106,   106,   106,   106,   106,   106,   106,   nil,   nil,
   nil,   106,   nil,   nil,   nil,   106,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   106,   106,   nil,   106,
   106,   nil,    40,   106,    40,   nil,    40,    40,    40,    40,
    40,    40,   nil,   nil,   nil,    40,   nil,   nil,   nil,    40,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    40,   nil,    40,    40,   nil,   107,    40,   107,   nil,
   107,   107,   107,   107,   107,   107,   nil,   nil,   nil,   107,
   nil,   nil,   nil,   107,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   107,   nil,   107,   107,   nil,
    34,   107,    34,   nil,    34,    34,    34,    34,    34,    34,
   nil,   nil,   nil,    34,   nil,   nil,   nil,    34,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    34,
   nil,    34,    34,   nil,    44,    34,    44,   nil,    44,    44,
    44,    44,    44,    44,   nil,   nil,   nil,    44,   nil,   nil,
   nil,    44,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    69,
   nil,   nil,   nil,    44,   nil,    44,    44,   nil,    69,    44,
    69,    69,    69,    69,    69,    69,    69,    69,    69,    69,
    69,    69,    70,   nil,    69,   nil,   nil,   nil,   nil,   nil,
   nil,    70,   nil,    70,    70,    70,    70,    70,    70,    70,
    70,    70,    70,    70,    70,    58,   nil,    70,   nil,   nil,
   nil,   nil,   nil,   nil,    58,   nil,    58,    58,    58,    58,
    58,    58,    58,    58,    58,    58,    58,    58,    53,   nil,
    53,    53,    53,    53,    53,    53,    53,    53,    53,    53,
    53,    53,   nil,   nil,   nil,    98,    53,    98,    98,    98,
    98,    98,    98,    98,    98,    98,    98,    98,    98,     3,
   nil,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,    86,   nil,    86,    86,    86,    86,    86,
    86,    86,    86,    86,    86,    86,    86,    87,   nil,    87,
    87,    87,    87,    87,    87,    87,    87,    87,    87,    87,
    87,   120,   nil,   120,   120,   120,   120,   120,   120,   120,
   120,   120,   120,   120,   120,    72,   nil,    72,    72,    72,
    72,    72,    72,    72,    72,    72,    72,    72,    72,   121,
   nil,   121,   121,   121,   121,   121,   121,   121,   121,   121,
   121,   121,   121,   117,   nil,   117,   117,   117,   117,   117,
   117,   117,   117,   117,   117,   117,   117 ]

racc_action_pointer = [
     0,   136,    -2,  1135,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    59,   308,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    77,   852,    70,     7,    97,
   nil,   172,   648,   240,   988,    83,    36,    83,   716,   376,
   920,   444,   784,   512,  1022,    70,   104,   138,   206,   274,
   342,   nil,   410,  1104,    24,   nil,    21,   nil,  1090,   478,
   nil,    20,   nil,    64,   nil,    11,   nil,   -13,     7,  1044,
  1067,   nil,  1191,     4,   108,   142,   210,   176,    79,   278,
   244,   250,   104,    46,   102,    57,  1149,  1163,   nil,   -16,
   nil,   614,     6,   nil,   nil,    30,   682,   nil,  1121,   nil,
     9,   nil,    67,   750,   nil,   818,   886,   954,   nil,   nil,
   580,    79,   nil,   nil,   nil,   nil,   nil,  1219,    56,    52,
  1177,  1205,   nil,   nil,    22,   nil,   546,    87,   nil ]

racc_action_default = [
   -53,   -81,    -2,    -3,    -6,    -7,    -8,    -9,   -10,   -11,
   -12,   -13,   -14,   -15,   -16,   -17,   -53,   -19,   -20,   -21,
   -22,   -23,   -24,   -25,   -26,   -75,   -53,   -29,   -40,   -46,
   -50,   -53,   -53,   -53,   -53,   -81,   -53,   -81,   -53,   -53,
   -53,   -53,   -53,   -53,   -53,   -53,   -53,   -53,   -53,   -53,
   -53,   -55,   -53,   -81,   -81,   -76,   -81,   -34,   -36,   -53,
   -30,   -81,   -41,   -81,   -44,   -81,   -47,   -73,   -74,   -81,
   -81,   129,    -4,   -54,   -61,   -62,   -63,   -64,   -65,   -66,
   -67,   -68,   -69,   -70,   -71,   -72,   -51,   -59,   -57,   -81,
   -18,   -53,   -81,   -28,   -31,   -81,   -53,   -38,   -37,   -39,
   -81,   -48,   -81,   -53,   -45,   -53,   -53,   -53,   -56,   -58,
   -53,   -81,   -77,   -32,   -35,   -42,   -49,   -43,   -81,   -81,
   -52,   -60,   -27,   -78,   -81,   -80,   -53,   -81,   -79 ]

racc_goto_table = [
     2,    53,    36,    62,    57,    51,    56,    99,    54,     1,
    55,    58,    89,    64,    93,    61,    67,    68,    69,    70,
   nil,    72,    73,    74,    75,    76,    77,    78,    79,    80,
    81,    82,    83,    84,    85,    86,   nil,    87,   nil,   nil,
   nil,   nil,   nil,   nil,    98,   nil,   nil,   nil,   nil,   nil,
   104,   nil,   nil,   nil,    91,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   108,   nil,   nil,   nil,   nil,   nil,   105,
   106,   nil,   nil,   nil,   114,   115,   nil,   112,   nil,   nil,
   nil,    58,   nil,   nil,   nil,    64,   nil,   nil,   117,   nil,
   nil,   111,   120,   nil,   nil,   121,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   118,   119,   nil,   nil,   nil,
   nil,    36,   nil,   nil,   nil,   nil,   nil,   nil,    36,    36,
   nil,   nil,   nil,   nil,   126,   nil,   127,    36 ]

racc_goto_check = [
     2,     3,     4,    25,    21,    27,    19,    24,    17,     1,
    13,     3,    28,    13,    20,    23,     3,     3,     3,     3,
   nil,     3,    13,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,   nil,     3,   nil,   nil,
   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,
    13,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    27,   nil,   nil,   nil,   nil,   nil,     4,
     4,   nil,   nil,   nil,    21,    25,   nil,    13,   nil,   nil,
   nil,     3,   nil,   nil,   nil,    13,   nil,   nil,     3,   nil,
   nil,     2,     3,   nil,   nil,     3,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     2,     2,   nil,   nil,   nil,
   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,     4,     4,
   nil,   nil,   nil,   nil,     4,   nil,     2,     4 ]

racc_goto_pointer = [
   nil,     9,     0,   -15,     0,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   -15,   nil,   nil,   nil,   -17,   nil,   -20,
   -42,   -22,   nil,   -13,   -54,   -25,   nil,   -10,   -40 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     7,     8,     9,    10,    11,
    12,    13,    14,    15,    19,    20,    21,   nil,    26,   nil,
   nil,   nil,    28,   nil,   nil,   nil,    63,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 40, :_reduce_1,
  1, 40, :_reduce_2,
  1, 41, :_reduce_3,
  3, 41, :_reduce_4,
  2, 41, :_reduce_5,
  1, 41, :_reduce_6,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  3, 42, :_reduce_18,
  1, 44, :_reduce_19,
  1, 44, :_reduce_20,
  1, 44, :_reduce_21,
  1, 44, :_reduce_22,
  1, 44, :_reduce_23,
  1, 44, :_reduce_24,
  1, 44, :_reduce_25,
  1, 44, :_reduce_26,
  5, 53, :_reduce_27,
  3, 54, :_reduce_28,
  1, 57, :_reduce_none,
  2, 57, :_reduce_none,
  1, 59, :_reduce_none,
  2, 59, :_reduce_none,
  0, 58, :_reduce_33,
  1, 58, :_reduce_34,
  3, 58, :_reduce_35,
  1, 60, :_reduce_36,
  2, 60, :_reduce_37,
  2, 60, :_reduce_38,
  3, 55, :_reduce_39,
  0, 62, :_reduce_40,
  1, 62, :_reduce_41,
  3, 62, :_reduce_42,
  3, 64, :_reduce_43,
  1, 65, :_reduce_none,
  2, 65, :_reduce_45,
  1, 61, :_reduce_none,
  2, 61, :_reduce_none,
  1, 63, :_reduce_none,
  2, 63, :_reduce_none,
  1, 52, :_reduce_50,
  3, 48, :_reduce_51,
  5, 46, :_reduce_52,
  0, 51, :_reduce_none,
  3, 51, :_reduce_54,
  2, 45, :_reduce_55,
  4, 45, :_reduce_56,
  2, 66, :_reduce_57,
  3, 66, :_reduce_58,
  1, 67, :_reduce_59,
  3, 67, :_reduce_60,
  3, 47, :_reduce_61,
  3, 47, :_reduce_62,
  3, 47, :_reduce_63,
  3, 47, :_reduce_64,
  3, 47, :_reduce_65,
  3, 47, :_reduce_66,
  3, 47, :_reduce_67,
  3, 47, :_reduce_68,
  3, 47, :_reduce_69,
  3, 47, :_reduce_70,
  3, 47, :_reduce_71,
  3, 47, :_reduce_72,
  2, 47, :_reduce_73,
  2, 47, :_reduce_74,
  0, 56, :_reduce_75,
  1, 56, :_reduce_76,
  3, 56, :_reduce_77,
  5, 49, :_reduce_78,
  8, 49, :_reduce_79,
  5, 50, :_reduce_80 ]

racc_reduce_n = 81

racc_shift_n = 129

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :WHILE => 4,
  :NEWLINE => 5,
  :INTEGER => 6,
  :STRING => 7,
  :TRUE => 8,
  :FALSE => 9,
  :NIL => 10,
  :IDENTIFIER => 11,
  :END => 12,
  :UMINUS => 13,
  "." => 14,
  "!" => 15,
  "*" => 16,
  "/" => 17,
  "+" => 18,
  "-" => 19,
  ">" => 20,
  ">=" => 21,
  "<" => 22,
  "<=" => 23,
  "==" => 24,
  "!=" => 25,
  "&&" => 26,
  "||" => 27,
  "=" => 28,
  "," => 29,
  ";" => 30,
  "(" => 31,
  ")" => 32,
  "->" => 33,
  "[" => 34,
  "]" => 35,
  ":" => 36,
  "{" => 37,
  "}" => 38 }

racc_nt_base = 39

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "WHILE",
  "NEWLINE",
  "INTEGER",
  "STRING",
  "TRUE",
  "FALSE",
  "NIL",
  "IDENTIFIER",
  "END",
  "UMINUS",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"==\"",
  "\"!=\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\",\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "\"->\"",
  "\"[\"",
  "\"]\"",
  "\":\"",
  "\"{\"",
  "\"}\"",
  "$start",
  "Root",
  "Expressions",
  "Expression",
  "Terminator",
  "Literal",
  "Call",
  "SlotAssign",
  "Operator",
  "LocalAssign",
  "If",
  "While",
  "SlotGet",
  "Identifier",
  "Function",
  "Array",
  "Tuple",
  "ParamList",
  "LBracket",
  "ArrayList",
  "RBracket",
  "ArrayListElement",
  "LBrace",
  "TupleList",
  "RBrace",
  "TupleListElement",
  "TupleKey",
  "ArgListWithParens",
  "ArgList" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'noscript.y', 33)
  def _reduce_1(val, _values, result)
     result = Script.new(lineno, filename, Nodes.new(lineno, [])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 34)
  def _reduce_2(val, _values, result)
     result = Script.new(lineno, filename, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 39)
  def _reduce_3(val, _values, result)
     result = Nodes.new(lineno, val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 40)
  def _reduce_4(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 42)
  def _reduce_5(val, _values, result)
     result = val[0].is_a?(Nodes) ? val[0] : Nodes.new(lineno, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 43)
  def _reduce_6(val, _values, result)
     result = Nodes.new(lineno, []) 
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

module_eval(<<'.,.,', 'noscript.y', 63)
  def _reduce_18(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 68)
  def _reduce_19(val, _values, result)
     result = FixnumLiteral.new(lineno, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 69)
  def _reduce_20(val, _values, result)
     result = StringLiteral.new(lineno, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 70)
  def _reduce_21(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 71)
  def _reduce_22(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 72)
  def _reduce_23(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 73)
  def _reduce_24(val, _values, result)
     result = TrueLiteral.new(lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 74)
  def _reduce_25(val, _values, result)
     result = FalseLiteral.new(lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 75)
  def _reduce_26(val, _values, result)
     result = NilLiteral.new(lineno) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 86)
  def _reduce_27(val, _values, result)
     result = FunctionLiteral.new(lineno, val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 90)
  def _reduce_28(val, _values, result)
     result = ArrayLiteral.new(lineno, val[1]) 
    result
  end
.,.,

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

module_eval(<<'.,.,', 'noscript.y', 104)
  def _reduce_33(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 105)
  def _reduce_34(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 106)
  def _reduce_35(val, _values, result)
     result = val[0] += [val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 110)
  def _reduce_36(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 111)
  def _reduce_37(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 112)
  def _reduce_38(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 116)
  def _reduce_39(val, _values, result)
     result = HashLiteral.new(lineno, val[1].flatten) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 120)
  def _reduce_40(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 121)
  def _reduce_41(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 122)
  def _reduce_42(val, _values, result)
     result = val[0] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 126)
  def _reduce_43(val, _values, result)
     result = [StringLiteral.new(lineno, val[0].name), val[2]] 
    result
  end
.,.,

# reduce 44 omitted

module_eval(<<'.,.,', 'noscript.y', 131)
  def _reduce_45(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

module_eval(<<'.,.,', 'noscript.y', 145)
  def _reduce_50(val, _values, result)
     result = Identifier.new(lineno, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 150)
  def _reduce_51(val, _values, result)
     result = LocalVariableAssignment.new(lineno, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 155)
  def _reduce_52(val, _values, result)
     result = SlotAssign.new(lineno, val[0], val[2], val[4]) 
    result
  end
.,.,

# reduce 53 omitted

module_eval(<<'.,.,', 'noscript.y', 161)
  def _reduce_54(val, _values, result)
     result = SlotGet.new(lineno, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 167)
  def _reduce_55(val, _values, result)
     result = CallNode.new(lineno, nil, val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 170)
  def _reduce_56(val, _values, result)
     result = CallNode.new(lineno, val[0], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 174)
  def _reduce_57(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 175)
  def _reduce_58(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 179)
  def _reduce_59(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 180)
  def _reduce_60(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 185)
  def _reduce_61(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 186)
  def _reduce_62(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 187)
  def _reduce_63(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 188)
  def _reduce_64(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 189)
  def _reduce_65(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 190)
  def _reduce_66(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 191)
  def _reduce_67(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 192)
  def _reduce_68(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 195)
  def _reduce_69(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 196)
  def _reduce_70(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 197)
  def _reduce_71(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 198)
  def _reduce_72(val, _values, result)
     result = CallNode.new(lineno, val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 200)
  def _reduce_73(val, _values, result)
     result = CallNode.new(lineno, val[1], '@!', []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 201)
  def _reduce_74(val, _values, result)
     result = CallNode.new(lineno, val[1], '@-', []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 205)
  def _reduce_75(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 206)
  def _reduce_76(val, _values, result)
     result = [val[0].name] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 207)
  def _reduce_77(val, _values, result)
     result = val[0] << val[2].name 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 213)
  def _reduce_78(val, _values, result)
     result = IfNode.new(lineno, val[1], val[3], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 218)
  def _reduce_79(val, _values, result)
     result = IfNode.new(lineno, val[1], val[3], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.y', 224)
  def _reduce_80(val, _values, result)
     result = WhileNode.new(lineno, val[1], val[3]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Noscript


