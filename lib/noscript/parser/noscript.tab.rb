#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

#
# generated by racc
#
require_relative 'noscript.rex'

module Noscript
  class Parser < Racc::Parser

module_eval(<<'...end noscript.racc/module_eval...', 'noscript.racc', 84)

...end noscript.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    17,     3,   -11,     4,    16,    22,   -11,     5,     6,    17,
     3,   -10,     4,    16,    36,   -10,     5,     6,    17,     3,
    61,     4,    16,    17,    30,     5,     6,    16,    17,    30,
     5,     6,    16,    24,    25,     5,     6,    28,    29,    26,
    27,    24,    25,    17,     3,    51,     4,    16,    17,    30,
     5,     6,    16,    24,    25,     5,     6,    17,     3,    55,
     4,    16,    55,    66,     5,     6,    17,    30,    17,    30,
    16,    46,    16,     5,    18,     5,    17,    30,    17,    30,
    16,    21,    16,     5,   nil,     5,    17,    30,    17,    30,
    16,   nil,    16,     5,    53,     5,    59,   -13,    52,    -8,
    60,   -13,   nil,    -8,    28,    29,    26,    27,   -32,   -32,
   -32,    20,   nil,    21,   -31,   -31,   -31,   -29,   -29,   -29,
    24,    25,    28,    29,    28,    29 ]

racc_action_check = [
     0,     0,    41,     0,     0,     4,    41,     0,     0,    62,
    62,    40,    62,    62,    18,    40,    62,    62,     2,     2,
    56,     2,     2,    61,    61,     2,     2,    61,    52,    52,
    61,    61,    52,    37,    37,    52,    52,    34,    34,    34,
    34,    13,    13,    20,    20,    34,    20,    20,    21,    21,
    20,    20,    21,    19,    19,    21,    21,    65,    65,    46,
    65,    65,    60,    65,    65,    65,    29,    29,    16,    16,
    29,    22,    16,    29,     1,    16,    17,    17,    27,    27,
    17,    30,    27,    17,   nil,    27,    26,    26,    28,    28,
    26,   nil,    28,    26,    45,    28,    54,    43,    45,    38,
    54,    43,   nil,    38,    15,    15,    15,    15,     8,     8,
     8,     3,   nil,     3,     9,     9,     9,    10,    10,    10,
    59,    59,    48,    48,    47,    47 ]

racc_action_pointer = [
    -6,    74,    12,   103,    -2,   nil,   nil,   nil,   105,   111,
   114,   nil,   nil,    25,   nil,   101,    62,    70,    14,    37,
    37,    42,    61,   nil,   nil,   nil,    80,    72,    82,    60,
    71,   nil,   nil,   nil,    34,   nil,   nil,    17,    88,   nil,
     0,    -9,   nil,    86,   nil,    83,    52,   121,   119,   nil,
   nil,   nil,    22,   nil,    85,   nil,    12,   nil,   nil,   104,
    55,    17,     3,   nil,   nil,    51,   nil ]

racc_action_default = [
    -2,   -45,    -1,    -5,   -45,    -6,    -7,   -22,   -23,   -24,
   -25,   -26,   -27,   -40,   -30,   -45,   -45,   -45,   -45,   -41,
   -45,   -14,   -45,   -28,   -42,   -43,   -45,   -45,   -45,   -45,
    -5,   -29,   -31,   -32,   -45,   -38,    67,    -3,   -29,    -9,
   -32,   -30,   -12,   -31,   -15,   -45,   -19,   -33,   -34,   -35,
   -36,   -37,   -45,   -44,   -45,    -5,   -18,   -20,   -16,   -45,
   -45,   -45,   -39,   -21,   -17,   -45,    -4 ]

racc_goto_table = [
     8,    19,     8,    41,    44,    10,     2,    10,    39,    57,
    62,     9,    45,     9,    54,     1,   nil,   nil,   nil,    37,
     8,    40,   nil,    63,   nil,    10,    38,   nil,    56,   nil,
   nil,     9,    43,   nil,    41,    58,   nil,   nil,   nil,    39,
   nil,   nil,    56,    41,    64,   nil,   nil,   nil,    39,   nil,
   nil,   nil,    40,   nil,   nil,   nil,   nil,    38,   nil,   nil,
   nil,    40,     8,    43,    19,     8,    38,    10,    65,   nil,
    10,   nil,    43,     9,    34,    35,     9,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    47,    48,    49,    50 ]

racc_goto_check = [
    12,     4,    12,     8,    13,     9,     2,     9,    10,    16,
     7,    14,    15,    14,     6,     1,   nil,   nil,   nil,     4,
    12,    12,   nil,    16,   nil,     9,     9,   nil,     8,   nil,
   nil,    14,    14,   nil,     8,    13,   nil,   nil,   nil,    10,
   nil,   nil,     8,     8,    13,   nil,   nil,   nil,    10,   nil,
   nil,   nil,    12,   nil,   nil,   nil,   nil,     9,   nil,   nil,
   nil,    12,    12,    14,     4,    12,     9,     9,     2,   nil,
     9,   nil,    14,    14,    17,    17,    14,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    17,    17,    17,    17 ]

racc_goto_pointer = [
   nil,    15,     6,   nil,    -1,   nil,   -32,   -49,   -18,     5,
   -13,   nil,     0,   -17,    11,    -9,   -37,    58 ]

racc_goto_default = [
   nil,   nil,   nil,     7,    13,    12,   nil,    23,    14,    31,
    11,    42,    33,   nil,    32,   nil,   nil,    15 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 19, :_reduce_1,
  0, 19, :_reduce_2,
  3, 21, :_reduce_3,
  8, 23, :_reduce_4,
  1, 26, :_reduce_5,
  1, 27, :_reduce_6,
  1, 28, :_reduce_7,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  0, 33, :_reduce_14,
  1, 33, :_reduce_15,
  3, 33, :_reduce_16,
  3, 34, :_reduce_17,
  1, 34, :_reduce_none,
  0, 24, :_reduce_19,
  1, 24, :_reduce_20,
  3, 24, :_reduce_21,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  2, 22, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  3, 30, :_reduce_33,
  3, 30, :_reduce_34,
  3, 30, :_reduce_35,
  3, 30, :_reduce_36,
  3, 30, :_reduce_37,
  2, 30, :_reduce_38,
  0, 20, :_reduce_39,
  1, 20, :_reduce_40,
  2, 20, :_reduce_41,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  4, 32, :_reduce_44 ]

racc_reduce_n = 45

racc_shift_n = 67

racc_token_table = {
  false => 0,
  :error => 1,
  :UMINUS => 2,
  "*" => 3,
  "/" => 4,
  "+" => 5,
  "-" => 6,
  :IDENTIFIER => 7,
  :ASSIGN => 8,
  :DEF => 9,
  :LPAREN => 10,
  :RPAREN => 11,
  :END => 12,
  :DIGIT => 13,
  :STRING => 14,
  :COMMA => 15,
  :SEMICOLON => 16,
  :NEWLINE => 17 }

racc_nt_base = 18

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "UMINUS",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "IDENTIFIER",
  "ASSIGN",
  "DEF",
  "LPAREN",
  "RPAREN",
  "END",
  "DIGIT",
  "STRING",
  "COMMA",
  "SEMICOLON",
  "NEWLINE",
  "$start",
  "target",
  "statements",
  "assignment",
  "statement",
  "method_definition",
  "parameter_list",
  "end_of_statement",
  "identifier",
  "digit",
  "string",
  "literal",
  "operation",
  "argument",
  "method_call",
  "argument_list",
  "parameter",
  "op_member" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'noscript.racc', 13)
  def _reduce_1(val, _values, result)
     result = AST::Nodes.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 14)
  def _reduce_2(val, _values, result)
     0 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 16)
  def _reduce_3(val, _values, result)
     result = AST::AssignNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 18)
  def _reduce_4(val, _values, result)
     result = AST::DefMethod.new(val[1], val[3], AST::Nodes.new(val[6])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 20)
  def _reduce_5(val, _values, result)
     result = AST::Identifier.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 22)
  def _reduce_6(val, _values, result)
     result = AST::Digit.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 23)
  def _reduce_7(val, _values, result)
     result = AST::String.new(val[0]) 
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'noscript.racc', 33)
  def _reduce_14(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 34)
  def _reduce_15(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 35)
  def _reduce_16(val, _values, result)
     result.push(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 37)
  def _reduce_17(val, _values, result)
     result = AST::DefaultParameter.new(val[0], val[2])
    result
  end
.,.,

# reduce 18 omitted

module_eval(<<'.,.,', 'noscript.racc', 40)
  def _reduce_19(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 41)
  def _reduce_20(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 42)
  def _reduce_21(val, _values, result)
     result.push(val[2]) 
    result
  end
.,.,

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

module_eval(<<'.,.,', 'noscript.racc', 57)
  def _reduce_33(val, _values, result)
     result = AST::AddNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 58)
  def _reduce_34(val, _values, result)
     result = AST::SubtractNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 59)
  def _reduce_35(val, _values, result)
     result = AST::MultiplicationNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 60)
  def _reduce_36(val, _values, result)
     result = AST::DivisionNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 61)
  def _reduce_37(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 62)
  def _reduce_38(val, _values, result)
     result = AST::UnaryMinus.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 64)
  def _reduce_39(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 65)
  def _reduce_40(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'noscript.racc', 66)
  def _reduce_41(val, _values, result)
     result.push(val[1]) 
    result
  end
.,.,

# reduce 42 omitted

# reduce 43 omitted

module_eval(<<'.,.,', 'noscript.racc', 72)
  def _reduce_44(val, _values, result)
                      result = AST::MethodCall.new(val[0], val[2])
                
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Noscript


